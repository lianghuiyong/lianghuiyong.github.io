<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梁惠涌の博客</title>
  <subtitle>好奇·期待</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lianghuiyong.online/"/>
  <updated>2017-04-22T09:38:56.682Z</updated>
  <id>http://lianghuiyong.online/</id>
  
  <author>
    <name>梁惠涌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MVP+Dagger使用笔记</title>
    <link href="http://lianghuiyong.online/2017/04/18/MVP-Dagger%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://lianghuiyong.online/2017/04/18/MVP-Dagger使用笔记/</id>
    <published>2017-04-18T10:37:36.000Z</published>
    <updated>2017-04-22T09:38:56.682Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="http://oeqej1j2m.bkt.clouddn.com/MVP-Android.png" alt="MVP"></p>
<p>MVP：</p>
<p>V层处理UI视图操作；P层实现业务逻辑操作（有设计需要的时候，核心业务甚至可以写到一个核心的P里面去）；M层为数据仓库，后台管理数据来源与数据控制，数据是来自网络、数据库、SP、缓存，示例：你可能会需要这样一个实现，一个数据列表，不需要实时性，但是需要给网络情况有问题时的用户提升用户体验，需要使用网络数据+本地缓存数据机制，那么，都可以统一在这个数据仓库做处理，代码逻辑层次很清晰，你应该会喜欢上这个设计。</p>
<p>V-P之间的调用方式采取依赖倒置原则，俗话就是使用抽象接口（回调）；P与V，代码写多了，其实会发现，V可以正常的调用P，P则要尽量少调用V，或者使用DataBinding，数据的变化使用绑定方式；P与M，M只与P做沟通，数据一般来自后台延时操作，这块也就是使用RxJava情况较多的地方，网络请求可以尝试使用ReTrofit。一般情况下，一个V对应一个P，而P和M，会出现一个P对应多个M的情况（M的接口多了，或许会把M按模块创建）。</p>
<p>Dagger+MVP：</p>
<p>则是实现在MVP 结构代码中，P、M 的对象创建使用 Dagger 注入方式。</p>
<a id="more"></a>
<h2 id="我的基类库，欢迎Star"><a href="#我的基类库，欢迎Star" class="headerlink" title="我的基类库，欢迎Star"></a>我的基类库，欢迎Star</h2><p><a href="https://github.com/lianghuiyong/AndroidBase/" target="_blank" rel="external">compile ‘com.better.android:appbase:x.y.z’</a></p>
<h2 id="MVP使用"><a href="#MVP使用" class="headerlink" title="MVP使用"></a>MVP使用</h2><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> class ExampleV extends <span class="title">BaseAppCompatActivity</span><span class="params">(or BaseFragment)</span> implements ExampleContract.View</span>&#123;</div><div class="line">    </div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    ExamplePresenter presenter;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getLayoutId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> R.layout.Example;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> MvpPresenter <span class="title">getPresenter</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> presenter;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.init();</div><div class="line"></div><div class="line">        <span class="comment">//使用Dagger创建presenter,并不需要new对象。</span></div><div class="line">        DaggerViewComponent.builder()</div><div class="line">                .repositoryComponent(DaggerRepositoryComponent.builder().build())</div><div class="line">                .presenterModule(<span class="keyword">new</span> PresenterModule(<span class="keyword">this</span>))</div><div class="line">                .build()</div><div class="line">                .inject(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    ......</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="P"><a href="#P" class="headerlink" title="P"></a>P</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExamplePresenter</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span> <span class="keyword">implements</span> <span class="title">ExampleContract</span>.<span class="title">Presenter</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    Test1Repository repository1;</div><div class="line"></div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    Test2Repository repository2;</div><div class="line">    </div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> ExampleContract.View view;</div><div class="line">    </div><div class="line">    <span class="comment">//你的数据管理仓库</span></div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> ExampleRepository repository;</div><div class="line">    </div><div class="line">    <span class="comment">//参数使用MvpView类型，便于view的清单管理和PresenterModule的单一</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExamplePresenter</span><span class="params">(MvpView view)</span> </span>&#123;</div><div class="line">       <span class="keyword">this</span>.mView = (ExampleContract.View)mView;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Contract"><a href="#Contract" class="headerlink" title="Contract"></a>Contract</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExampleContract</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * view接口层  处理界面</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">View</span> <span class="keyword">extends</span> <span class="title">MvpView</span></span>&#123;</div><div class="line">        ......</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Presenter接口层 处理业务</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Presenter</span> <span class="keyword">extends</span> <span class="title">MvpPresenter</span></span>&#123;</div><div class="line">        <span class="function">List&lt;String&gt; <span class="title">getListData</span><span class="params">()</span></span>;</div><div class="line">        ......</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 数据管理仓库，控制选择使用remote数据还是local数据（SP、数据库、缓存）</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1Repository</span> <span class="keyword">implements</span> <span class="title">Test1Api</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Test1Api mTest1RemoteDataSource;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Test1Api mTest1LocalDataSource;</div><div class="line"></div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test1Repository</span><span class="params">(@Local Test1LocalDataSource mTest1LocalDataSource, @Remote Test1RemoteDataSource mTest1RemoteDataSource)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mTest1RemoteDataSource = mTest1RemoteDataSource;</div><div class="line">        <span class="keyword">this</span>.mTest1LocalDataSource = mTest1LocalDataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">testGet</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mTest1LocalDataSource.testGet();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Test1Api</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 测试接口</div><div class="line">     */</div><div class="line">    <span class="function">List&lt;String&gt; <span class="title">testGet</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1RemoteDataSource</span> <span class="keyword">implements</span> <span class="title">Test1Api</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">testGet</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> *</div><div class="line"> * 数据local实现方式</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1LocalDataSource</span> <span class="keyword">implements</span> <span class="title">Test1Api</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">testGet</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        list.add(<span class="string">"数据源一：1"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：2"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：3"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：4"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：5"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：6"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：7"</span>);</div><div class="line">        list.add(<span class="string">"数据源一：8"</span>);</div><div class="line">        <span class="keyword">return</span> list;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Dagger使用"><a href="#Dagger使用" class="headerlink" title="Dagger使用"></a>Dagger使用</h3><p>简单说明：</p>
<p>一般创建对象方式，new一个Presenter对象，找到该对象的构造方法，传递参数，presenter指向该对象空间：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Presenter presenter</span> = new Presenter(testActivity);</div></pre></td></tr></table></figure></p>
<p>Dagger则是把对象的构建方法、构造参数和具体的new动作，做了拆分到不同文件来处理</p>
<h4 id="Dagger使用方式一：构造参数为当前this时"><a href="#Dagger使用方式一：构造参数为当前this时" class="headerlink" title="Dagger使用方式一：构造参数为当前this时"></a>Dagger使用方式一：构造参数为当前this时</h4><p> 1、构造方法使用@Inject标注构造方法，表明该构造方法是Dagger注入入口<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Inject</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">Presenter</span><span class="params">(MvpView mView)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.mView = (Test_DaggerListContract.View)mView;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 2、使用@Module标注，创建构造方法使用时参数的Module，@Provides标注为该方法返回参数实体类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Module</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PresenterModule</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> MvpView mView;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PresenterModule</span><span class="params">(MvpView view)</span> </span>&#123;</div><div class="line">        mView = view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Provides</span></div><div class="line">    <span class="meta">@ActivityScoped</span></div><div class="line">    <span class="function">MvpView <span class="title">provideTasksContractView</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mView;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 3、创建ViewComponent，@Component标注的方法，ViewComponent会自动生成一个DaggerViewComponent的方法，modules后面为参数的Module，dependencies后面为注入的依赖。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@ActivityScoped</span></div><div class="line"><span class="meta">@Component</span>(modules = PresenterModule.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ViewComponent</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inject</span><span class="params">(Test_DaggerListActivity activity)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 4、通过DaggerViewComponent的方法注入，@Inject标注的presenter对象已经实例化了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_DaggerListActivity</span> </span>&#123;</div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    Test_DaggerListPresenter presenter;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">        DaggerViewComponent.builder()</div><div class="line">            <span class="comment">//(new PresenterModule(this))时，通过this参数也已经把view对象传递给了module里的view了</span></div><div class="line">            .presenterModule(<span class="keyword">new</span> PresenterModule(<span class="keyword">this</span>))</div><div class="line">            .build()</div><div class="line">            .inject(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="Dagger使用方式二：构造参数非当前this"><a href="#Dagger使用方式二：构造参数非当前this" class="headerlink" title="Dagger使用方式二：构造参数非当前this"></a>Dagger使用方式二：构造参数非当前this</h4><p> 1、构造方法使用@Inject标注构造方法，表明该构造方法是Dagger注入入口<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2Repository</span> <span class="keyword">implements</span> <span class="title">Test2Api</span> &#123;</span></div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Test2Api mTest2RemoteDataSource;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Test2Api mTest2LocalDataSource;</div><div class="line">    </div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    <span class="keyword">public</span> Test2Repository(<span class="meta">@Local</span> Test2LocalDataSource mTestLocalDataSource, <span class="meta">@Remote</span> Test2RemoteDataSource mTestRemoteDataSource) &#123;</div><div class="line">        <span class="keyword">this</span>.mTest2RemoteDataSource = mTestRemoteDataSource;</div><div class="line">        <span class="keyword">this</span>.mTest2LocalDataSource = mTestLocalDataSource;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ......</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 2、使用@Module标注，创建构造方法使用时参数的Module，@Provides标注为该方法返回参数实体类型<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@Module</span></div><div class="line">public class Test1RepositoryModule &#123;</div><div class="line"></div><div class="line">    <span class="variable">@Singleton</span></div><div class="line">    <span class="variable">@Provides</span></div><div class="line">    <span class="variable">@Local</span></div><div class="line">    Test1LocalDataSource provideTest1LocalDataSource() &#123;</div><div class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">Test1LocalDataSource</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @<span class="selector-tag">Singleton</span></div><div class="line">    @<span class="selector-tag">Provides</span></div><div class="line">    @<span class="selector-tag">Remote</span></div><div class="line">    <span class="selector-tag">Test1RemoteDataSource</span> <span class="selector-tag">provideTest1RemoteDataSource</span>() &#123;</div><div class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">Test1RemoteDataSource</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 3、创建ViewComponent，@Component标注的方法，ViewComponent会自动生成一个DaggerViewComponent的方法，modules后面为参数的Module，dependencies后面为注入的依赖。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Singleton</span></div><div class="line"><span class="meta">@Component</span>(modules = &#123;Test1RepositoryModule.class&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RepositoryComponent</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="function">Test1Repository <span class="title">getTest1Repository</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 4、通过DaggerRepositoryComponent的方法注入，@Inject标注的repository1、repository2对象已经实例化了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_DaggerListPresenter</span></span>&#123;</div><div class="line">   </div><div class="line">    </div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    Test1Repository repository1;</div><div class="line">    </div><div class="line">    <span class="meta">@Inject</span></div><div class="line">    Test2Repository repository2;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test_DaggerListPresenter</span><span class="params">()</span> </span>&#123;</div><div class="line">        DaggerRepositoryComponent.builder().build();</div><div class="line">    &#125;</div><div class="line">    ......</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><ul>
<li><a href="https://github.com/lianghuiyong/AndroidBase/blob/appbase-2.0/app/src/main/java/net/liang/androidbaseapplication/mvp/daggernormal/Test_DaggerNormalActivity.java" target="_blank" rel="external">MVP+Dagger实现一个数据源数据返回</a></li>
<li><a href="https://github.com/lianghuiyong/AndroidBase/blob/appbase-2.0/app/src/main/java/net/liang/androidbaseapplication/mvp/daggerlist/Test_DaggerListActivity.java" target="_blank" rel="external">MVP+Dagger使用基类列表页面实现两个数据源数据返回</a></li>
</ul>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://blog.csdn.net/u010386612/article/details/52225740" target="_blank" rel="external">Dagger文章推荐1：使用Dagger2前你必须了解的一些设计原则</a></li>
<li><a href="http://codethink.me/2015/08/06/dependency-injection-with-dagger-2/" target="_blank" rel="external">Dagger文章推荐2：使用Dagger 2进行依赖注入</a></li>
<li><a href="http://blog.csdn.net/it_yangkun/article/details/52961105" target="_blank" rel="external">Dagger文章推荐3：Google官方MVP+Dagger2架构详解</a></li>
</ul>
<h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><ul>
<li><a href="https://github.com/lianghuiyong/AndroidBase/wiki/lambda-%E9%85%8D%E7%BD%AE" target="_blank" rel="external">lambda配置</a></li>
</ul>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><ul>
<li><a href="http://git.oschina.net/oschina/android-app" target="_blank" rel="external"><img src="https://img.shields.io/badge/OsChina%20App-2.8.0-brightgreen.svg" alt=""></a></li>
<li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external"><img src="https://img.shields.io/badge/RxJava-2.0-brightgreen.svg" alt=""></a>   </li>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external"><img src="https://img.shields.io/badge/butterknife-8.5.1-brightgreen.svg" alt=""></a>   </li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="external"><img src="https://img.shields.io/badge/todo-MVP-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-databinding/" target="_blank" rel="external"><img src="https://img.shields.io/badge/todo-DataBinding-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="external"><img src="https://img.shields.io/badge/BaseRecyclerViewAdapterHelper-2.9.0-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/Blankj/AndroidUtilCode" target="_blank" rel="external"><img src="https://img.shields.io/badge/AndroidUtilCode-1.3.5-brightgreen.svg" alt=""></a> </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://oeqej1j2m.bkt.clouddn.com/MVP-Android.png&quot; alt=&quot;MVP&quot;&gt;&lt;/p&gt;
&lt;p&gt;MVP：&lt;/p&gt;
&lt;p&gt;V层处理UI视图操作；P层实现业务逻辑操作（有设计需要的时候，核心业务甚至可以写到一个核心的P里面去）；M层为数据仓库，后台管理数据来源与数据控制，数据是来自网络、数据库、SP、缓存，示例：你可能会需要这样一个实现，一个数据列表，不需要实时性，但是需要给网络情况有问题时的用户提升用户体验，需要使用网络数据+本地缓存数据机制，那么，都可以统一在这个数据仓库做处理，代码逻辑层次很清晰，你应该会喜欢上这个设计。&lt;/p&gt;
&lt;p&gt;V-P之间的调用方式采取依赖倒置原则，俗话就是使用抽象接口（回调）；P与V，代码写多了，其实会发现，V可以正常的调用P，P则要尽量少调用V，或者使用DataBinding，数据的变化使用绑定方式；P与M，M只与P做沟通，数据一般来自后台延时操作，这块也就是使用RxJava情况较多的地方，网络请求可以尝试使用ReTrofit。一般情况下，一个V对应一个P，而P和M，会出现一个P对应多个M的情况（M的接口多了，或许会把M按模块创建）。&lt;/p&gt;
&lt;p&gt;Dagger+MVP：&lt;/p&gt;
&lt;p&gt;则是实现在MVP 结构代码中，P、M 的对象创建使用 Dagger 注入方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>MVP使用笔记</title>
    <link href="http://lianghuiyong.online/2017/04/18/MVP%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://lianghuiyong.online/2017/04/18/MVP使用笔记/</id>
    <published>2017-04-18T10:24:48.000Z</published>
    <updated>2017-04-22T09:38:38.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="http://oeqej1j2m.bkt.clouddn.com/MVP-Android.png" alt="MVP"></p>
<p>MVP：</p>
<p>V层处理UI视图操作；P层实现业务逻辑操作（有设计需要的时候，核心业务甚至可以写到一个核心的P里面去）；M层为数据仓库，后台管理数据来源与数据控制，数据是来自网络、数据库、SP、缓存，示例：你可能会需要这样一个实现，一个数据列表，不需要实时性，但是需要给网络情况有问题时的用户提升用户体验，需要使用网络数据+本地缓存数据机制，那么，都可以统一在这个数据仓库做处理，代码逻辑层次很清晰，你应该会喜欢上这个设计。</p>
<p>V-P之间的调用方式采取依赖倒置原则，俗话就是使用抽象接口（回调）；P与V，代码写多了，其实会发现，V可以正常的调用P，P则要尽量少调用V，或者使用DataBinding，数据的变化使用绑定方式；P与M，M只与P做沟通，数据一般来自后台延时操作，这块也就是使用RxJava情况较多的地方，网络请求可以尝试使用ReTrofit。一般情况下，一个V对应一个P，而P和M，会出现一个P对应多个M的情况（M的接口多了，或许会把M按模块创建）。</p>
<a id="more"></a>
<h2 id="我的基类库，欢迎Star"><a href="#我的基类库，欢迎Star" class="headerlink" title="我的基类库，欢迎Star"></a>我的基类库，欢迎Star</h2><p><a href="https://github.com/lianghuiyong/AndroidBase/" target="_blank" rel="external">compile ‘com.better.android:appbase:x.y.z’</a></p>
<h2 id="MVP使用介绍"><a href="#MVP使用介绍" class="headerlink" title="MVP使用介绍"></a>MVP使用介绍</h2><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> class ExampleV extends <span class="title">BaseAppCompatActivity</span><span class="params">(or BaseFragment)</span> implements ExampleContract.View</span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getLayoutId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> R.layout.Example;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> MvpPresenter <span class="title">getPresenter</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ......</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="P"><a href="#P" class="headerlink" title="P"></a>P</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExamplePresenter</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span> <span class="keyword">implements</span> <span class="title">ExampleContract</span>.<span class="title">Presenter</span> </span>&#123;</div><div class="line">    </div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> ExampleContract.View view;</div><div class="line">    </div><div class="line">    <span class="comment">//你的数据管理仓库</span></div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> ExampleRepository repository;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExamplePresenter</span><span class="params">(@NonNull ExampleContract.View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.view = checkNotNull(view, <span class="string">"view cannot be null!"</span>);</div><div class="line">        <span class="keyword">this</span>.repository = ExampleRepository.getInstance(RemoteExampleDataSource.getInstance(), LocalExampleDataSource.getInstance());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Contract"><a href="#Contract" class="headerlink" title="Contract"></a>Contract</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExampleContract</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * view接口层  处理界面</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">View</span> <span class="keyword">extends</span> <span class="title">MvpView</span></span>&#123;</div><div class="line">        ......</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Presenter接口层 处理业务</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Presenter</span> <span class="keyword">extends</span> <span class="title">MvpPresenter</span></span>&#123;</div><div class="line">        ......</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 数据管理仓库，控制选择使用remote数据还是local数据（SP、数据库、缓存）</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleRepository</span> <span class="keyword">implements</span> <span class="title">ExampleApi</span> </span>&#123;</div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExampleRepository INSTANCE = <span class="keyword">null</span>;</div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExampleApi localDataSource;</div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExampleApi remoteDataSource;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExampleRepository</span><span class="params">(@NonNull ExampleApi localDataSource, @NonNull ExampleApi remoteDataSource)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.localDataSource = checkNotNull(localDataSource);</div><div class="line">        <span class="keyword">this</span>.remoteDataSource = checkNotNull(remoteDataSource);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ExampleRepository <span class="title">getINSTANCE</span><span class="params">(@NonNull ExampleApi localDataSource, @NonNull ExampleApi remoteDataSource)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</div><div class="line">            INSTANCE = <span class="keyword">new</span> ExampleRepository(localDataSource, remoteDataSource);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> INSTANCE;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; register(<span class="meta">@Body</span> ExampleRegisterBean sendBean) &#123;</div><div class="line">        <span class="keyword">return</span> remoteDataSource.register(sendBean);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; unregister(<span class="meta">@Body</span> ExampleUnRegisterBean sendBean) &#123;</div><div class="line">        <span class="keyword">return</span> localDataSource.unregister(sendBean);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExampleApi</span> </span>&#123;</div><div class="line"> </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 注册</div><div class="line">     * 使用retrofit请求</div><div class="line">     */</div><div class="line">    <span class="meta">@POST</span>(<span class="string">"services/device/register"</span>)</div><div class="line">    Observable&lt;BaseResponseData&lt;String&gt;&gt; register(<span class="meta">@Body</span> RegisterBean sendBean);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 注销</div><div class="line">     * 使用非retrofit请求</div><div class="line">     */</div><div class="line">    Observable&lt;BaseResponseData&lt;String&gt;&gt; unregister(UnRegisterBean sendBean);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//remote数据实现</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteExampleDataSource</span> <span class="keyword">implements</span> <span class="title">ExampleApi</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RemoteExampleDataSource INSTANCE;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RemoteExampleDataSource <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</div><div class="line">            INSTANCE = <span class="keyword">new</span> RemoteExampleDataSource();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> INSTANCE;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; register(<span class="meta">@Body</span> RegisterBean sendBean) &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line">        * public static ExampleApi getExampleApi() &#123;</div><div class="line">        *     if (ExampleApi == null) &#123;</div><div class="line">        *         Retrofit retrofit = new Retrofit.Builder()</div><div class="line">        *                 .client(new OkHttpClient())</div><div class="line">        *                 .baseUrl(UrlConstants.HOST)</div><div class="line">        *                 .addConverterFactory(GsonConverterFactory.create())</div><div class="line">        *                 .addCallAdapterFactory(RxJava2CallAdapterFactory.create())</div><div class="line">        *                 .build();</div><div class="line">        *         ExampleApi = retrofit.create(ExampleApi.class);</div><div class="line">        *     &#125;</div><div class="line">        *     return ExampleApi;</div><div class="line">        * &#125;</div><div class="line">        */</div><div class="line">        <span class="keyword">return</span> NetWork.getExampleApi().register(sendBean);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; unregister(UnRegisterBean sendBean) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalExampleDataSource</span> <span class="keyword">implements</span> <span class="title">ExampleApi</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LocalExampleDataSource INSTANCE;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalExampleDataSource <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</div><div class="line">            INSTANCE = <span class="keyword">new</span> LocalExampleDataSource();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> INSTANCE;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; register(<span class="meta">@Body</span> RegisterBean sendBean) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Observable&lt;BaseResponseData&lt;String&gt;&gt; unregister(UnRegisterBean sendBean) &#123;</div><div class="line">        ......</div><div class="line">        <span class="keyword">return</span> Observable.just(baseResponseData);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><ul>
<li><a href="http://git.oschina.net/oschina/android-app" target="_blank" rel="external"><img src="https://img.shields.io/badge/OsChina%20App-2.8.0-brightgreen.svg" alt=""></a></li>
<li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external"><img src="https://img.shields.io/badge/RxJava-2.0-brightgreen.svg" alt=""></a>   </li>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external"><img src="https://img.shields.io/badge/butterknife-8.5.1-brightgreen.svg" alt=""></a>   </li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="external"><img src="https://img.shields.io/badge/todo-MVP-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-databinding/" target="_blank" rel="external"><img src="https://img.shields.io/badge/todo-DataBinding-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="external"><img src="https://img.shields.io/badge/BaseRecyclerViewAdapterHelper-2.9.0-brightgreen.svg" alt=""></a> </li>
<li><a href="https://github.com/Blankj/AndroidUtilCode" target="_blank" rel="external"><img src="https://img.shields.io/badge/AndroidUtilCode-1.3.5-brightgreen.svg" alt=""></a> </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://oeqej1j2m.bkt.clouddn.com/MVP-Android.png&quot; alt=&quot;MVP&quot;&gt;&lt;/p&gt;
&lt;p&gt;MVP：&lt;/p&gt;
&lt;p&gt;V层处理UI视图操作；P层实现业务逻辑操作（有设计需要的时候，核心业务甚至可以写到一个核心的P里面去）；M层为数据仓库，后台管理数据来源与数据控制，数据是来自网络、数据库、SP、缓存，示例：你可能会需要这样一个实现，一个数据列表，不需要实时性，但是需要给网络情况有问题时的用户提升用户体验，需要使用网络数据+本地缓存数据机制，那么，都可以统一在这个数据仓库做处理，代码逻辑层次很清晰，你应该会喜欢上这个设计。&lt;/p&gt;
&lt;p&gt;V-P之间的调用方式采取依赖倒置原则，俗话就是使用抽象接口（回调）；P与V，代码写多了，其实会发现，V可以正常的调用P，P则要尽量少调用V，或者使用DataBinding，数据的变化使用绑定方式；P与M，M只与P做沟通，数据一般来自后台延时操作，这块也就是使用RxJava情况较多的地方，网络请求可以尝试使用ReTrofit。一般情况下，一个V对应一个P，而P和M，会出现一个P对应多个M的情况（M的接口多了，或许会把M按模块创建）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>使用Charles抓Https包过程</title>
    <link href="http://lianghuiyong.online/2017/04/03/%E4%BD%BF%E7%94%A8Charles%E6%8A%93Https%E5%8C%85%E8%BF%87%E7%A8%8B/"/>
    <id>http://lianghuiyong.online/2017/04/03/使用Charles抓Https包过程/</id>
    <published>2017-04-03T10:59:53.000Z</published>
    <updated>2017-04-04T12:23:11.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、平台"><a href="#1、平台" class="headerlink" title="1、平台"></a>1、平台</h2><p>Windows 10</p>
<p>Charles 4.0.2</p>
<a id="more"></a>
<h2 id="2、代理端口监听"><a href="#2、代理端口监听" class="headerlink" title="2、代理端口监听"></a>2、代理端口监听</h2><p><img src="http://oeqej1j2m.bkt.clouddn.com/Charles%20%E7%AB%AF%E5%8F%A3%E8%AE%BE%E7%BD%AE.png" alt=""></p>
<h2 id="3、SSL证书设置"><a href="#3、SSL证书设置" class="headerlink" title="3、SSL证书设置"></a>3、SSL证书设置</h2><p><img src="http://oeqej1j2m.bkt.clouddn.com/Charles%20SSL%E8%AF%81%E4%B9%A6%E8%AE%BE%E7%BD%AE.png" alt=""></p>
<h2 id="4、SSL端口设置"><a href="#4、SSL端口设置" class="headerlink" title="4、SSL端口设置"></a>4、SSL端口设置</h2><p>手机获取SSL认证：<a href="http://charlesproxy.com/getssl" target="_blank" rel="external">http://charlesproxy.com/getssl</a></p>
<p><img src="http://oeqej1j2m.bkt.clouddn.com/Charles%20SSL%E7%AB%AF%E5%8F%A3%E8%AE%BE%E7%BD%AE.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、平台&quot;&gt;&lt;a href=&quot;#1、平台&quot; class=&quot;headerlink&quot; title=&quot;1、平台&quot;&gt;&lt;/a&gt;1、平台&lt;/h2&gt;&lt;p&gt;Windows 10&lt;/p&gt;
&lt;p&gt;Charles 4.0.2&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Android studio 2.3 Cmake Jni 环境搭建</title>
    <link href="http://lianghuiyong.online/2017/03/31/Android-studio-2-3-Cmake-Jni-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://lianghuiyong.online/2017/03/31/Android-studio-2-3-Cmake-Jni-环境搭建/</id>
    <published>2017-03-31T11:18:19.000Z</published>
    <updated>2017-04-03T10:06:15.725Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><pre><code>c++的支持很优雅！
</code></pre><h1 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h1><p>1、Android studio 2.3</p>
<p>2、NDK 版本：14.1.38</p>
<p>3、Cmake(SDK tools 列表里下载)</p>
<a id="more"></a>
<h2 id="gradle配置"><a href="#gradle配置" class="headerlink" title="gradle配置"></a>gradle配置</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    <span class="params">...</span><span class="params">...</span></div><div class="line">    defaultConfig &#123;</div><div class="line">        <span class="params">...</span><span class="params">...</span></div><div class="line">        externalNativeBuild &#123;</div><div class="line">            cmake &#123;</div><div class="line">                <span class="comment">//以下为C开发方式</span></div><div class="line">                <span class="comment">//cppFlags ""</span></div><div class="line">                </div><div class="line">                <span class="comment">//以下为C++开发方式，具体参数可以百度下</span></div><div class="line">                cppFlags <span class="string">"-std=c++11"</span>, <span class="string">"-frtti"</span>, <span class="string">"-fexceptions"</span></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            ndk &#123;</div><div class="line">                <span class="comment">//生成的平台支持列表</span></div><div class="line">                abiFilters <span class="string">'armeabi-v7a'</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="params">...</span><span class="params">...</span></div><div class="line">    externalNativeBuild &#123;</div><div class="line">        cmake &#123;</div><div class="line">            <span class="comment">//Cmake 配置文件</span></div><div class="line">            path <span class="string">"CMakeLists.txt"</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CMakeLists示例说明"><a href="#CMakeLists示例说明" class="headerlink" title="CMakeLists示例说明"></a>CMakeLists示例说明</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">//版本相关</div><div class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.6</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Creates and names a library, sets it as either STATIC</span></div><div class="line"><span class="comment"># or SHARED, and provides the relative paths to its source code.</span></div><div class="line"><span class="comment"># You can define multiple libraries, and CMake builds it for you.</span></div><div class="line"><span class="comment"># Gradle automatically packages shared libraries with your APK.</span></div><div class="line"></div><div class="line">//配置c++文件路径和头文件路径</div><div class="line"><span class="keyword">set</span>(CMAKE_VERBOSE_MAKEFILE <span class="keyword">on</span>)</div><div class="line"><span class="keyword">set</span>(libs <span class="string">"$&#123;CMAKE_SOURCE_DIR&#125;/src/main/jniLibs"</span>)</div><div class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/src/main/cpp/<span class="keyword">include</span>)</div><div class="line"></div><div class="line"><span class="comment">#--------------------------------------------------- import ---------------------------------------------------#</span></div><div class="line">//根据项目自己的Jni依赖需求,需要引用第三方so库的时候，使用<span class="keyword">add_library</span></div><div class="line"><span class="keyword">add_library</span>(libopencv_java3 SHARED IMPORTED )</div><div class="line"><span class="keyword">set_target_properties</span>(libopencv_java3 PROPERTIES</div><div class="line">    IMPORTED_LOCATION <span class="string">"$&#123;libs&#125;/$&#123;ANDROID_ABI&#125;/libopencv_java3.so"</span>)</div><div class="line"></div><div class="line">//这个在gradle里配置了，这里应该是不用写的</div><div class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">"$&#123;CMAKE_CXX_FLAGS&#125; -std=gnu++11 -fexceptions -frtti"</span>)</div><div class="line"></div><div class="line">//自己的so库lib名，以及依赖的c++文件</div><div class="line"><span class="keyword">add_library</span>( <span class="comment"># Sets the name of the library.</span></div><div class="line">             scanner</div><div class="line"></div><div class="line">             <span class="comment"># Sets the library as a shared library.</span></div><div class="line">             SHARED</div><div class="line"></div><div class="line">             <span class="comment"># Provides a relative path to your source file(s).</span></div><div class="line">             <span class="comment"># Associated headers in the same location as their source</span></div><div class="line">             <span class="comment"># file are automatically included.</span></div><div class="line">             src/main/cpp/libmanager.cpp</div><div class="line">             src/main/cpp/scanner.cpp)</div><div class="line"></div><div class="line"><span class="keyword">find_library</span>( <span class="comment"># Sets the name of the path variable.</span></div><div class="line">              log-lib</div><div class="line"></div><div class="line">              <span class="comment"># Specifies the name of the NDK library that</span></div><div class="line">              <span class="comment"># you want CMake to locate.</span></div><div class="line">              log)</div><div class="line"></div><div class="line">//库连接，scanner依赖了后面的静态库</div><div class="line"><span class="keyword">target_link_libraries</span>(scanner android log</div><div class="line">    libopencv_java3</div><div class="line">    <span class="variable">$&#123;log-lib&#125;</span></div><div class="line">    )</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用体验&quot;&gt;&lt;a href=&quot;#使用体验&quot; class=&quot;headerlink&quot; title=&quot;使用体验&quot;&gt;&lt;/a&gt;使用体验&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;c++的支持很优雅！
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;环境需求&quot;&gt;&lt;a href=&quot;#环境需求&quot; class=&quot;headerlink&quot; title=&quot;环境需求&quot;&gt;&lt;/a&gt;环境需求&lt;/h1&gt;&lt;p&gt;1、Android studio 2.3&lt;/p&gt;
&lt;p&gt;2、NDK 版本：14.1.38&lt;/p&gt;
&lt;p&gt;3、Cmake(SDK tools 列表里下载)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>echo 服务器开发笔记</title>
    <link href="http://lianghuiyong.online/2017/03/31/echo-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://lianghuiyong.online/2017/03/31/echo-服务器开发笔记/</id>
    <published>2017-03-31T01:36:24.000Z</published>
    <updated>2017-04-03T10:06:15.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、解决Http-x509-未认证的验证问题"><a href="#1、解决Http-x509-未认证的验证问题" class="headerlink" title="1、解决Http x509 未认证的验证问题"></a>1、解决Http x509 未认证的验证问题</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">func</span> <span class="selector-tag">newClient</span>() *<span class="selector-tag">http</span><span class="selector-class">.Client</span> &#123;</div><div class="line">	<span class="attribute">tr </span>:= &amp;http.Transport&#123;</div><div class="line">		TLSClientConfig: &amp;tls.Config&#123;InsecureSkipVerify: true&#125;,</div><div class="line">	&#125;</div><div class="line">	<span class="selector-tag">return</span> &amp;<span class="selector-tag">http</span><span class="selector-class">.Client</span>&#123;<span class="attribute">Transport</span>: tr&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、解决Http-x509-未认证的验证问题&quot;&gt;&lt;a href=&quot;#1、解决Http-x509-未认证的验证问题&quot; class=&quot;headerlink&quot; title=&quot;1、解决Http x509 未认证的验证问题&quot;&gt;&lt;/a&gt;1、解决Http x509 未认证的验证问题&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;newClient&lt;/span&gt;() *&lt;span class=&quot;selector-tag&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Client&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;tr &lt;/span&gt;:= &amp;amp;http.Transport&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		TLSClientConfig: &amp;amp;tls.Config&amp;#123;InsecureSkipVerify: true&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;selector-tag&quot;&gt;return&lt;/span&gt; &amp;amp;&lt;span class=&quot;selector-tag&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Client&lt;/span&gt;&amp;#123;&lt;span class=&quot;attribute&quot;&gt;Transport&lt;/span&gt;: tr&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Android Apk反编译</title>
    <link href="http://lianghuiyong.online/2017/03/30/Android-Apk%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    <id>http://lianghuiyong.online/2017/03/30/Android-Apk反编译/</id>
    <published>2017-03-30T03:20:06.000Z</published>
    <updated>2017-04-03T10:06:15.725Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、解apk包"><a href="#1、解apk包" class="headerlink" title="1、解apk包"></a>1、解apk包</h3><pre><code>apktool d -s ***.apk
</code></pre><p><img src="http://o9or3yi8n.bkt.clouddn.com/Android%20%E5%8F%8D%E7%BC%96%E8%AF%91.png.png" alt=""></p>
<h3 id="2、反编译class文件"><a href="#2、反编译class文件" class="headerlink" title="2、反编译class文件"></a>2、反编译class文件</h3><pre><code>dex2jar.bat D:\apktool\d2japk\classes.dex
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、解apk包&quot;&gt;&lt;a href=&quot;#1、解apk包&quot; class=&quot;headerlink&quot; title=&quot;1、解apk包&quot;&gt;&lt;/a&gt;1、解apk包&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;apktool d -s ***.apk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img 
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>echo框架使用：获取与配置</title>
    <link href="http://lianghuiyong.online/2017/03/12/echo%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%8E%B7%E5%8F%96%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://lianghuiyong.online/2017/03/12/echo框架使用：获取与配置/</id>
    <published>2017-03-12T09:12:02.000Z</published>
    <updated>2017-03-13T12:21:42.226Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运行环境-1"><a href="#运行环境-1" class="headerlink" title="运行环境 1"></a>运行环境 1</h1><pre><code>Linux   :CentOS 7.0
Go      :go version go1.8 linux/amd64
GOPATH  :/root/sdk/go/lib
</code></pre><h1 id="运行环境-2"><a href="#运行环境-2" class="headerlink" title="运行环境 2"></a>运行环境 2</h1><pre><code>Windows10
Go      :go version go1.8 windows/amd64
GOPATH  :C:\Go\lib
</code></pre><a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=25862794&auto=0&height=66"></iframe>

<h1 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h1><pre><code>yum install git
</code></pre><h1 id="获取-echo"><a href="#获取-echo" class="headerlink" title="获取 echo"></a>获取 echo</h1><pre><code>go get -v -u github.com/labstack/echo/
</code></pre><h1 id="获取日志"><a href="#获取日志" class="headerlink" title="获取日志"></a>获取日志</h1><blockquote>
<p>对于下载失败的库，都可以到github.com/golang/去找！</p>
</blockquote>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">github.com<span class="regexp">/labstack/</span>echo (download)</div><div class="line">github.com<span class="regexp">/labstack/</span>gommon (download)</div><div class="line">github.com<span class="regexp">/mattn/</span>go-colorable (download)</div><div class="line">github.com<span class="regexp">/mattn/</span>go-isatty (download)</div><div class="line">github.com<span class="regexp">/valyala/</span>fasttemplate (download)</div><div class="line">Fetching <span class="string">https:</span><span class="comment">//golang.org/x/crypto/acme/autocert?go-get=1</span></div><div class="line">https fetch <span class="string">failed:</span> Get <span class="string">https:</span><span class="comment">//golang.org/x/crypto/acme/autocert?go-get=1: dial tcp 216.239.37.1:443: i/o timeout</span></div><div class="line"><span class="keyword">package</span> golang.org<span class="regexp">/x/</span>crypto<span class="regexp">/acme/</span><span class="string">autocert:</span> unrecognized <span class="keyword">import</span> path <span class="string">"golang.org/x/crypto/acme/autocert"</span> (https fet</div><div class="line"><span class="string">ch:</span> Get <span class="string">https:</span><span class="comment">//golang.org/x/crypto/acme/autocert?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)</span></div></pre></td></tr></table></figure>
<blockquote>
<p>1、下到一半的时候可能会出现错误，这时，编译项目的时候缺少哪个包就去对应的下就好了，guthub上也有一些相对应的包（github源的包都能go get到的）</p>
<p>go get -u -v github.com/stretchr/testify/assert</p>
<p>2、项目会出现”golang.org/x/net/context”丢失，使用间接获取，</p>
<p>go get -u -v github.com/golang/net</p>
<p>在golang.org文件夹下创建x文件夹，将$GOPATH\src\github.com\golang 下的net复制到$GOPATH\src\golang.org\x目录下 ,然后执行：</p>
<p>go install -v golang.org/x/net/context</p>
<p>3、运行时可能会出现找不到包cannot find package “github.com/dgrijalva/jwt-go”</p>
<p>go get -u -v github.com/dgrijalva/jwt-go</p>
</blockquote>
<h1 id="再安装一遍echo"><a href="#再安装一遍echo" class="headerlink" title="再安装一遍echo"></a>再安装一遍echo</h1><pre><code>go install -v github.com/labstack/echo/
</code></pre><h1 id="echo测试代码"><a href="#echo测试代码" class="headerlink" title="echo测试代码"></a>echo测试代码</h1><p><img src="http://oeqej1j2m.bkt.clouddn.com/echo_test_post.png" alt=""></p>
<h2 id="api-go"><a href="#api-go" class="headerlink" title="api.go"></a>api.go</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> api</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"../data"</span></div><div class="line">	<span class="string">"github.com/labstack/echo"</span></div><div class="line">	<span class="string">"net/http"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">//noinspection GoUnusedExportedFunction</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostTest</span><span class="params">(c echo.Context)</span> <span class="title">error</span></span>&#123;</div><div class="line"></div><div class="line">	movies := []data.Movie&#123;</div><div class="line">		&#123;<span class="string">"金刚狼"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"休·杰克曼"</span>, <span class="string">"达芙妮·基恩"</span>, <span class="string">"帕特里克·斯图尔特"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"极限特工"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"范·迪塞尔"</span>, <span class="string">"露比·罗丝"</span>, <span class="string">"妮娜·杜波夫"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"功夫瑜伽"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"成龙"</span>, <span class="string">"李治廷"</span>, <span class="string">"张艺兴"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"生化危机：终章"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"米拉·乔沃维奇"</span>, <span class="string">"伊恩·格雷"</span>, <span class="string">"艾丽·拉特"</span>&#125;&#125;,</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	baseMovie := data.BaseResponse&#123;http.StatusOK, <span class="string">"success"</span>, movies&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> c.JSONPretty(http.StatusOK, baseMovie,<span class="string">"    "</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="BaseResponse-go"><a href="#BaseResponse-go" class="headerlink" title="BaseResponse.go"></a>BaseResponse.go</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="title">package</span> <span class="class"><span class="keyword">data</span></span></div><div class="line"></div><div class="line">//<span class="type">Go</span> 默认是不支持泛型的，定义一个接口结构体，即可当泛型使用</div><div class="line"><span class="class"><span class="keyword">type</span> <span class="type">T</span> interface &#123;</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">type</span> <span class="type">BaseResponse</span> struct &#123;</span></div><div class="line">	<span class="type">Code</span> <span class="title">int</span></div><div class="line">	<span class="type">Msg</span>  <span class="title">string</span></div><div class="line">	<span class="type">Data</span> <span class="type">T</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Movie-go"><a href="#Movie-go" class="headerlink" title="Movie.go"></a>Movie.go</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="title">package</span> <span class="class"><span class="keyword">data</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">type</span> <span class="type">Movie</span> struct &#123;</span></div><div class="line">	<span class="type">Title</span>  <span class="title">string</span></div><div class="line">	<span class="type">Year</span>   <span class="title">string</span></div><div class="line">	<span class="type">Actors</span> []<span class="title">string</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="main-go"><a href="#main-go" class="headerlink" title="main.go"></a>main.go</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">package main</div><div class="line"></div><div class="line">import (</div><div class="line">	<span class="string">"github.com/labstack/echo"</span></div><div class="line">	<span class="string">"github.com/labstack/echo/middleware"</span></div><div class="line">	<span class="string">"./api"</span></div><div class="line">)</div><div class="line"></div><div class="line">func main() &#123;</div><div class="line">	e := <span class="keyword">echo</span>.<span class="keyword">New</span>()</div><div class="line"></div><div class="line">	<span class="comment">// Middleware</span></div><div class="line">	e.<span class="keyword">Use</span>(middleware.Logger())</div><div class="line">	e.<span class="keyword">Use</span>(middleware.Recover())</div><div class="line"></div><div class="line">	<span class="comment">//CORS</span></div><div class="line">	e.<span class="keyword">Use</span>(middleware.CORSWithConfig(middleware.CORSConfig&#123;</div><div class="line">		AllowOrigins: []string&#123;<span class="string">"*"</span>&#125;,</div><div class="line">		AllowMethods: []string&#123;<span class="keyword">echo</span>.GET, <span class="keyword">echo</span>.HEAD, <span class="keyword">echo</span>.PUT, <span class="keyword">echo</span>.PATCH, <span class="keyword">echo</span>.POST, <span class="keyword">echo</span>.DELETE&#125;,</div><div class="line">	&#125;))</div><div class="line"></div><div class="line">	<span class="comment">//static file serviing</span></div><div class="line">	e.<span class="keyword">Static</span>(<span class="string">"/static"</span>, <span class="string">"assets"</span>)</div><div class="line"></div><div class="line">	<span class="comment">// Routers</span></div><div class="line">	e.POST(<span class="string">"/"</span>, api.PostTest)</div><div class="line">	<span class="comment">//e.GET("/users/:id", controllers.ShowUser)</span></div><div class="line">	<span class="comment">//e.GET("/users", controllers.AllUsers)</span></div><div class="line">	<span class="comment">//e.PUT("/users/:id", controllers.UpdateUser)</span></div><div class="line">	<span class="comment">//e.DELETE("/users/:id",controllers.DeleteUser)</span></div><div class="line"></div><div class="line">	<span class="comment">// Server</span></div><div class="line">	e.Start(<span class="string">":1323"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="echo监控"><a href="#echo监控" class="headerlink" title="echo监控"></a>echo监控</h1><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"D:\Program Files (x86)\JetBrains\Gogland\bin\runnerw.exe"</span> C:/Go\bin\go.exe run E:/Code/Go-Home/server/main.go</div><div class="line">⇛ http server started on <span class="string">[::]</span>:<span class="number">1323</span></div><div class="line">&#123;<span class="string">"time"</span>:<span class="string">"2017-03-13T20:05:50.8909566+08:00"</span>,<span class="string">"id"</span>:<span class="string">""</span>,<span class="string">"remote_ip"</span>:<span class="string">"::1"</span>,<span class="string">"host"</span>:<span class="string">"localhost:1323"</span>,<span class="string">"method"</span>:<span class="string">"<span class="keyword">POST</span>"</span>,<span class="string">"uri"</span>:<span class="string">"/"</span>,<span class="string">"status"</span>:<span class="number">200</span>, <span class="string">"latency"</span>:<span class="number">0</span>,<span class="string">"latency_human"</span>:<span class="string">"0s"</span>,<span class="string">"bytes_in"</span>:<span class="number">0</span>,<span class="string">"bytes_out"</span>:<span class="number">973</span>&#125;</div></pre></td></tr></table></figure>
<h1 id="请求测试"><a href="#请求测试" class="headerlink" title="请求测试"></a>请求测试</h1><p><img src="http://oeqej1j2m.bkt.clouddn.com/echo_test_post2.png" alt=""></p>
<h1 id="CentOS-7-防火墙问题"><a href="#CentOS-7-防火墙问题" class="headerlink" title="CentOS 7 防火墙问题"></a>CentOS 7 防火墙问题</h1><h2 id="1-测试是否可以访问"><a href="#1-测试是否可以访问" class="headerlink" title="1.测试是否可以访问"></a>1.测试是否可以访问</h2><pre><code>telnet 123.56.4.89 1323
</code></pre><h2 id="2-CentOS-7-关闭防火墙"><a href="#2-CentOS-7-关闭防火墙" class="headerlink" title="2.CentOS 7 关闭防火墙"></a>2.CentOS 7 关闭防火墙</h2><pre><code>firewall-cmd --zone=public --add-port=55555/tcp --permanent
firewall-cmd --reload
</code></pre><blockquote>
<p>命令含义： –zone #作用域 –add-port=80/tcp #添加端口，格式为：端口/通讯协议 –permanent #永久生效，没有此参数重启后失效</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;运行环境-1&quot;&gt;&lt;a href=&quot;#运行环境-1&quot; class=&quot;headerlink&quot; title=&quot;运行环境 1&quot;&gt;&lt;/a&gt;运行环境 1&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Linux   :CentOS 7.0
Go      :go version go1.8 linux/amd64
GOPATH  :/root/sdk/go/lib
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;运行环境-2&quot;&gt;&lt;a href=&quot;#运行环境-2&quot; class=&quot;headerlink&quot; title=&quot;运行环境 2&quot;&gt;&lt;/a&gt;运行环境 2&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Windows10
Go      :go version go1.8 windows/amd64
GOPATH  :C:\Go\lib
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>GO基础：复合数据类型</title>
    <link href="http://lianghuiyong.online/2017/03/12/GO%E5%9F%BA%E7%A1%80%EF%BC%9A%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://lianghuiyong.online/2017/03/12/GO基础：复合数据类型/</id>
    <published>2017-03-12T08:14:43.000Z</published>
    <updated>2017-03-12T08:36:48.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运行环境："><a href="#运行环境：" class="headerlink" title="运行环境："></a>运行环境：</h2><pre><code>go version go1.8 windows/amd64
</code></pre><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><pre><code>JetBrains Gogland
</code></pre><h2 id="Go-官方test代码"><a href="#Go-官方test代码" class="headerlink" title="Go 官方test代码"></a>Go 官方test代码</h2><pre><code>$GOPATH$\test
</code></pre><a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5307435&auto=0&height=66"></iframe>

<h2 id="练习代码"><a href="#练习代码" class="headerlink" title="练习代码"></a>练习代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"fmt"</span></div><div class="line">	<span class="string">"encoding/json"</span></div><div class="line">	<span class="string">"log"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	fmt.Println(<span class="string">"--------------数组测试---------------"</span>)</div><div class="line">	test_array()</div><div class="line">	fmt.Println(<span class="string">"--------------切片测试---------------"</span>)</div><div class="line">	test_slice()</div><div class="line">	fmt.Println(<span class="string">"--------------map测试---------------"</span>)</div><div class="line">	test_map()</div><div class="line">	fmt.Println(<span class="string">"--------------json测试---------------"</span>)</div><div class="line">	test_json()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*-----测试数组-----*/</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_array</span><span class="params">()</span></span> &#123;</div><div class="line">	arr := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</div><div class="line">	fmt.Println(arr)</div><div class="line">	arr[<span class="number">0</span>] = <span class="number">3</span></div><div class="line">	arr[<span class="number">1</span>] = <span class="number">3</span></div><div class="line">	arr[<span class="number">2</span>] = <span class="number">3</span></div><div class="line">	arr[<span class="number">3</span>] = <span class="number">3</span></div><div class="line">	fmt.Println(arr)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*------测试切片-----*/</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_slice</span><span class="params">()</span></span> &#123;</div><div class="line">	mouth := []<span class="keyword">string</span>&#123;<span class="number">1</span>: <span class="string">"一月"</span>, <span class="number">2</span>: <span class="string">"二月"</span>, <span class="number">3</span>: <span class="string">"三月"</span>, <span class="number">4</span>: <span class="string">"四月"</span>, <span class="number">5</span>: <span class="string">"五月"</span>, <span class="number">6</span>: <span class="string">"六月"</span>, <span class="number">7</span>: <span class="string">"七月"</span>, <span class="number">8</span>: <span class="string">"八月"</span>, <span class="number">9</span>: <span class="string">"九月"</span>, <span class="number">10</span>: <span class="string">"十月"</span>, <span class="number">11</span>: <span class="string">"十一月"</span>, <span class="number">12</span>: <span class="string">"十二月"</span>&#125;</div><div class="line"></div><div class="line">	slice1 := mouth[<span class="number">1</span>:<span class="number">3</span>]</div><div class="line">	slice2 := mouth[<span class="number">2</span>:<span class="number">5</span>]</div><div class="line"></div><div class="line">	fmt.Println(slice1)</div><div class="line">	fmt.Println(slice2)</div><div class="line"></div><div class="line">	fmt.Println(mouth)</div><div class="line">	reverse(mouth[:])</div><div class="line">	fmt.Println(mouth)</div><div class="line"></div><div class="line">	fmt.Println(slice1)</div><div class="line">	fmt.Println(slice2)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*--------数组反转--------*/</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(s []<span class="keyword">string</span>)</span></span> &#123;</div><div class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="built_in">len</span>(s)<span class="number">-1</span>; i &lt; j; i, j = i+<span class="number">1</span>, j<span class="number">-1</span> &#123;</div><div class="line">		s[i], s[j] = s[j], s[i]</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_map</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="comment">//创建map1</span></div><div class="line">	map1 := <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>&#123;&#125;</div><div class="line"></div><div class="line">	<span class="comment">//初始化赋值</span></div><div class="line">	map1[<span class="number">1</span>] = <span class="string">"hello1"</span></div><div class="line">	map1[<span class="number">2</span>] = <span class="string">"world2"</span></div><div class="line">	map1[<span class="number">3</span>] = <span class="string">"world3"</span></div><div class="line">	map1[<span class="number">4</span>] = <span class="string">"world4"</span></div><div class="line">	map1[<span class="number">5</span>] = <span class="string">"world5"</span></div><div class="line">	map1[<span class="number">6</span>] = <span class="string">"world6"</span></div><div class="line">	map1[<span class="number">7</span>] = <span class="string">"world7"</span></div><div class="line">	map1[<span class="number">8</span>] = <span class="string">"world8"</span></div><div class="line">	map1[<span class="number">9</span>] = <span class="string">"world9"</span></div><div class="line">	map1[<span class="number">10</span>] = <span class="string">"!!!!!!10"</span></div><div class="line"></div><div class="line">	<span class="comment">//取值</span></div><div class="line">	fmt.Println(map1)</div><div class="line">	fmt.Println(map1[<span class="number">1</span>])</div><div class="line"></div><div class="line">	<span class="comment">// Map的迭代顺序是不确定的，并且不同的哈希函数实现可能导致不同的遍历顺序。</span></div><div class="line">	<span class="comment">// 在实践中，遍历的顺序是随机的，每一次遍历的顺序都不相同。这是故意的，</span></div><div class="line">	<span class="comment">// 每次都使用随机的遍历顺序可以强制要求程序不会依赖具体的哈希函数实现。</span></div><div class="line">	<span class="comment">//for _, value := range map1 &#123;</span></div><div class="line">	<span class="comment">//	println("\t", value, "\n")</span></div><div class="line">	<span class="comment">//&#125;</span></div><div class="line"></div><div class="line">	<span class="comment">//删除</span></div><div class="line">	<span class="built_in">delete</span>(map1, <span class="number">2</span>)</div><div class="line">	fmt.Println(map1)</div><div class="line">	fmt.Println(map1[<span class="number">4</span>] + <span class="string">"1"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//使用 json解析的结构体成员变量首字母必须大写！！！</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_json</span><span class="params">()</span></span> &#123;</div><div class="line"></div><div class="line">	<span class="comment">//Go 默认是不支持泛型的，定义一个接口结构体，即可当泛型使用</span></div><div class="line">	<span class="keyword">type</span> T <span class="keyword">interface</span> &#123;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">type</span> Movie <span class="keyword">struct</span> &#123;</div><div class="line">		Title  <span class="keyword">string</span></div><div class="line">		Year   <span class="keyword">string</span></div><div class="line">		Actors []<span class="keyword">string</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">type</span> BaseResponse <span class="keyword">struct</span> &#123;</div><div class="line">		Code <span class="keyword">int</span></div><div class="line">		Msg  <span class="keyword">string</span></div><div class="line">		Data T</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	movies := []Movie&#123;</div><div class="line">		&#123;<span class="string">"金刚狼"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"休·杰克曼"</span>, <span class="string">"达芙妮·基恩"</span>, <span class="string">"帕特里克·斯图尔特"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"极限特工"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"范·迪塞尔"</span>, <span class="string">"露比·罗丝"</span>, <span class="string">"妮娜·杜波夫"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"功夫瑜伽"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"成龙"</span>, <span class="string">"李治廷"</span>, <span class="string">"张艺兴"</span>&#125;&#125;,</div><div class="line">		&#123;<span class="string">"生化危机：终章"</span>, <span class="string">"2017"</span>, []<span class="keyword">string</span>&#123;<span class="string">"米拉·乔沃维奇"</span>, <span class="string">"伊恩·格雷"</span>, <span class="string">"艾丽·拉特"</span>&#125;&#125;,</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	baseMovie := BaseResponse&#123;<span class="number">200</span>, <span class="string">"success"</span>, movies&#125;</div><div class="line"></div><div class="line">	<span class="comment">//一个是不带缩进显示的，一个是带缩进显示的</span></div><div class="line">	<span class="comment">//data, err := json.Marshal(baseMovie)</span></div><div class="line">	data, err := json.MarshalIndent(baseMovie, <span class="string">""</span>, <span class="string">"    "</span>)</div><div class="line"></div><div class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">		log.Fatalf(<span class="string">"JSON marshaling failed: %s"</span>, err)</div><div class="line">	&#125;</div><div class="line">	fmt.Printf(<span class="keyword">string</span>(data))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="输出部分"><a href="#输出部分" class="headerlink" title="输出部分"></a>输出部分</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">--------------数组测试---------------</div><div class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</div><div class="line">[<span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span>]</div><div class="line">--------------切片测试---------------</div><div class="line">[一月 二月]</div><div class="line">[二月 三月 四月]</div><div class="line">[ 一月 二月 三月 四月 五月 六月 七月 八月 九月 十月 十一月 十二月]</div><div class="line">[十二月 十一月 十月 九月 八月 七月 六月 五月 四月 三月 二月 一月 ]</div><div class="line">[十一月 十月]</div><div class="line">[十月 九月 八月]</div><div class="line">--------------map测试---------------</div><div class="line">map[<span class="number">3</span><span class="symbol">:world3</span> <span class="number">5</span><span class="symbol">:world5</span> <span class="number">6</span><span class="symbol">:world6</span> <span class="number">7</span><span class="symbol">:world7</span> <span class="number">9</span><span class="symbol">:world9</span> <span class="number">2</span><span class="symbol">:world2</span> <span class="number">4</span><span class="symbol">:world4</span> <span class="number">8</span><span class="symbol">:world8</span> <span class="number">10</span><span class="symbol">:</span>!!!!!!<span class="number">10</span> <span class="number">1</span><span class="symbol">:hello1</span>]</div><div class="line">hello1</div><div class="line">map[<span class="number">10</span><span class="symbol">:</span>!!!!!!<span class="number">10</span> <span class="number">1</span><span class="symbol">:hello1</span> <span class="number">4</span><span class="symbol">:world4</span> <span class="number">8</span><span class="symbol">:world8</span> <span class="number">6</span><span class="symbol">:world6</span> <span class="number">7</span><span class="symbol">:world7</span> <span class="number">9</span><span class="symbol">:world9</span> <span class="number">3</span><span class="symbol">:world3</span> <span class="number">5</span><span class="symbol">:world5</span>]</div><div class="line">world41</div><div class="line">--------------json测试---------------</div><div class="line">&#123;</div><div class="line">    <span class="string">"Code"</span>: <span class="number">200</span>,</div><div class="line">    <span class="string">"Msg"</span>: <span class="string">"success"</span>,</div><div class="line">    <span class="string">"Data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"Title"</span>: <span class="string">"金刚狼"</span>,</div><div class="line">            <span class="string">"Year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"Actors"</span>: [</div><div class="line">                <span class="string">"休·杰克曼"</span>,</div><div class="line">                <span class="string">"达芙妮·基恩"</span>,</div><div class="line">                <span class="string">"帕特里克·斯图尔特"</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">"Title"</span>: <span class="string">"极限特工"</span>,</div><div class="line">            <span class="string">"Year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"Actors"</span>: [</div><div class="line">                <span class="string">"范·迪塞尔"</span>,</div><div class="line">                <span class="string">"露比·罗丝"</span>,</div><div class="line">                <span class="string">"妮娜·杜波夫"</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">"Title"</span>: <span class="string">"功夫瑜伽"</span>,</div><div class="line">            <span class="string">"Year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"Actors"</span>: [</div><div class="line">                <span class="string">"成龙"</span>,</div><div class="line">                <span class="string">"李治廷"</span>,</div><div class="line">                <span class="string">"张艺兴"</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">"Title"</span>: <span class="string">"生化危机：终章"</span>,</div><div class="line">            <span class="string">"Year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"Actors"</span>: [</div><div class="line">                <span class="string">"米拉·乔沃维奇"</span>,</div><div class="line">                <span class="string">"伊恩·格雷"</span>,</div><div class="line">                <span class="string">"艾丽·拉特"</span></div><div class="line">            ]</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="在此感谢博客被百度、谷歌收录"><a href="#在此感谢博客被百度、谷歌收录" class="headerlink" title="在此感谢博客被百度、谷歌收录"></a>在此感谢博客被百度、谷歌收录</h1><p><img src="http://oeqej1j2m.bkt.clouddn.com/google%E6%9F%A5%E8%AF%A2.JPG" alt=""></p>
<p><img src="http://oeqej1j2m.bkt.clouddn.com/%E7%99%BE%E5%BA%A6%E6%9F%A5%E8%AF%A2.JPG" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运行环境：&quot;&gt;&lt;a href=&quot;#运行环境：&quot; class=&quot;headerlink&quot; title=&quot;运行环境：&quot;&gt;&lt;/a&gt;运行环境：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;go version go1.8 windows/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;编辑器&quot;&gt;&lt;a href=&quot;#编辑器&quot; class=&quot;headerlink&quot; title=&quot;编辑器&quot;&gt;&lt;/a&gt;编辑器&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;JetBrains Gogland
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Go-官方test代码&quot;&gt;&lt;a href=&quot;#Go-官方test代码&quot; class=&quot;headerlink&quot; title=&quot;Go 官方test代码&quot;&gt;&lt;/a&gt;Go 官方test代码&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;$GOPATH$\test
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Go基础：循环语句</title>
    <link href="http://lianghuiyong.online/2017/03/05/Go%E5%9F%BA%E7%A1%80%EF%BC%9A%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    <id>http://lianghuiyong.online/2017/03/05/Go基础：循环语句/</id>
    <published>2017-03-05T15:02:16.000Z</published>
    <updated>2017-03-07T17:26:27.957Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运行环境："><a href="#运行环境：" class="headerlink" title="运行环境："></a>运行环境：</h2><pre><code>go version go1.8 windows/amd64
</code></pre><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><pre><code>JetBrains Gogland
</code></pre><h2 id="Go-官方test代码"><a href="#Go-官方test代码" class="headerlink" title="Go 官方test代码"></a>Go 官方test代码</h2><pre><code>$GOPATH$\test
</code></pre><a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=211015&auto=0&height=66"></iframe>

<h2 id="练习代码"><a href="#练习代码" class="headerlink" title="练习代码"></a>练习代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"--------------------test_for--------------------"</span>)</div><div class="line">	test_for()</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"--------------------test_if--------------------"</span>)</div><div class="line">	test_if()</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"--------------------test_switch--------------------"</span>)</div><div class="line">	test_switch()</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"--------------------test_defer--------------------"</span>)</div><div class="line">	test_defer()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_for</span><span class="params">()</span></span> &#123;</div><div class="line">	sum := <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++ &#123;</div><div class="line">		sum += i</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"sum:"</span>, sum) <span class="comment">// sum: 45</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_if</span><span class="params">()</span></span> &#123;</div><div class="line"></div><div class="line">	<span class="comment">//表达式无需小括号</span></div><div class="line">	<span class="keyword">if</span> <span class="literal">true</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if"</span>)</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if"</span>)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//表达式可执行一部分简单的语句（赋值、函数等）</span></div><div class="line">	<span class="keyword">if</span> one := <span class="number">1</span>; <span class="literal">true</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if "</span>, one, <span class="string">" teue"</span>)</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if"</span>)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//简单的调用</span></div><div class="line">	<span class="keyword">if</span> test_for(); <span class="literal">false</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if "</span>, <span class="string">"test_for"</span>)</div><div class="line">	&#125; <span class="keyword">else</span> &#123;</div><div class="line">		fmt.Println(<span class="string">"is test if"</span>)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_switch</span><span class="params">()</span></span> &#123;</div><div class="line"></div><div class="line">	<span class="comment">//同样可执行简单语句，而且case可为bool值！</span></div><div class="line">	<span class="keyword">switch</span> i5 := <span class="number">5</span>; <span class="literal">true</span> &#123;</div><div class="line">	<span class="keyword">case</span> i5 &gt; <span class="number">5</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 &gt; 5"</span>)</div><div class="line">	<span class="keyword">case</span> i5 == <span class="number">5</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 == 5"</span>)</div><div class="line">	<span class="keyword">case</span> i5 &lt; <span class="number">5</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 &lt; 5"</span>)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	i5 := <span class="number">5</span></div><div class="line">	<span class="keyword">switch</span>  i5 &#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 0"</span>)</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 1"</span>)</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 2"</span>)</div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 3"</span>)</div><div class="line">	<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 4"</span>)</div><div class="line">	<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">		fmt.Println(<span class="string">"i5 is 5"</span>)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//defer会将函数进行入栈，当包含defer的函数返回时，被入栈的函数将一一出栈。</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_defer</span><span class="params">()</span></span>  &#123;</div><div class="line"></div><div class="line">	test_defer_hello()</div><div class="line"></div><div class="line">	fmt.Println(<span class="string">"counting"</span>)</div><div class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</div><div class="line">		<span class="keyword">defer</span> fmt.Println(i)</div><div class="line">	&#125;</div><div class="line">	fmt.Println(<span class="string">"done"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">test_defer_hello</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="keyword">defer</span> fmt.Println(<span class="string">"world"</span>)</div><div class="line">	fmt.Println(<span class="string">"hello"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="输出部分"><a href="#输出部分" class="headerlink" title="输出部分"></a>输出部分</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--------------------test_for--------------------</span></div><div class="line">sum: <span class="number">45</span></div><div class="line"><span class="comment">--------------------test_if--------------------</span></div><div class="line"><span class="keyword">is</span> test <span class="keyword">if</span></div><div class="line"><span class="keyword">is</span> test <span class="keyword">if</span>  <span class="number">1</span>  teue</div><div class="line">sum: <span class="number">45</span></div><div class="line"><span class="keyword">is</span> test <span class="keyword">if</span></div><div class="line"><span class="comment">--------------------test_switch--------------------</span></div><div class="line">i5 == <span class="number">5</span></div><div class="line">i5 <span class="keyword">is</span> <span class="number">5</span></div><div class="line"><span class="comment">--------------------test_defer--------------------</span></div><div class="line">hello</div><div class="line">world</div><div class="line">counting</div><div class="line">done</div><div class="line"><span class="number">9</span></div><div class="line"><span class="number">8</span></div><div class="line"><span class="number">7</span></div><div class="line"><span class="number">6</span></div><div class="line"><span class="number">5</span></div><div class="line"><span class="number">4</span></div><div class="line"><span class="number">3</span></div><div class="line"><span class="number">2</span></div><div class="line"><span class="number">1</span></div><div class="line"><span class="number">0</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运行环境：&quot;&gt;&lt;a href=&quot;#运行环境：&quot; class=&quot;headerlink&quot; title=&quot;运行环境：&quot;&gt;&lt;/a&gt;运行环境：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;go version go1.8 windows/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;编辑器&quot;&gt;&lt;a href=&quot;#编辑器&quot; class=&quot;headerlink&quot; title=&quot;编辑器&quot;&gt;&lt;/a&gt;编辑器&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;JetBrains Gogland
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Go-官方test代码&quot;&gt;&lt;a href=&quot;#Go-官方test代码&quot; class=&quot;headerlink&quot; title=&quot;Go 官方test代码&quot;&gt;&lt;/a&gt;Go 官方test代码&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;$GOPATH$\test
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Go基础：类型、变量、函数</title>
    <link href="http://lianghuiyong.online/2017/03/05/Go%E5%9F%BA%E7%A1%80%EF%BC%9A%E7%B1%BB%E5%9E%8B%E3%80%81%E5%8F%98%E9%87%8F%E3%80%81%E5%87%BD%E6%95%B0/"/>
    <id>http://lianghuiyong.online/2017/03/05/Go基础：类型、变量、函数/</id>
    <published>2017-03-05T13:57:34.000Z</published>
    <updated>2017-03-07T17:00:58.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运行环境："><a href="#运行环境：" class="headerlink" title="运行环境："></a>运行环境：</h2><pre><code>go version go1.8 windows/amd64
</code></pre><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><pre><code>JetBrains Gogland
</code></pre><h2 id="Go-官方test代码"><a href="#Go-官方test代码" class="headerlink" title="Go 官方test代码"></a>Go 官方test代码</h2><pre><code>$GOPATH$\test
</code></pre><h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bool</span></div><div class="line"><span class="keyword">string</span></div><div class="line"><span class="keyword">int</span>  <span class="keyword">int8</span>  <span class="keyword">int16</span>  <span class="keyword">int32</span>  <span class="keyword">int64</span></div><div class="line"><span class="keyword">uint</span> <span class="keyword">uint8</span> <span class="keyword">uint16</span> <span class="keyword">uint32</span> <span class="keyword">uint64</span> <span class="keyword">uintptr</span></div><div class="line"><span class="keyword">byte</span> <span class="comment">// uint8 的别名</span></div><div class="line"><span class="keyword">rune</span> <span class="comment">// int32 的别名, 代表一个Unicode码</span></div><div class="line"><span class="keyword">float32</span> <span class="keyword">float64</span></div><div class="line"><span class="keyword">complex64</span> <span class="keyword">complex128</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=35403523&auto=0&height=66"></iframe>

<h2 id="练习代码"><a href="#练习代码" class="headerlink" title="练习代码"></a>练习代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*包名*/</span></div><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="comment">/*导包*/</span></div><div class="line"><span class="keyword">import</span> (</div><div class="line">    <span class="string">"fmt"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    fmt.Println(<span class="string">"Go : Hello World!"</span>)</div><div class="line">    fmt.Println(add(<span class="number">25</span>, <span class="number">25</span>))</div><div class="line">    fmt.Println(swap(<span class="string">"huiyong"</span>, <span class="string">"liang"</span>))</div><div class="line">    fmt.Println(split(<span class="number">25</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//1、参数类型相同(x int, y int)，可简写成(x, y int)</span></div><div class="line"><span class="comment">//2、返回类型为 int</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</div><div class="line">    <span class="keyword">return</span> x + y</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//1、返回类型为 (string, string)，</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(x, y <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">string</span>)</span></span> &#123;</div><div class="line">    <span class="keyword">return</span> y, x</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//1、返回类型(x, y int)，已经声明了返回变量x，y</span></div><div class="line"><span class="comment">//2、指定了返回变量时，return x, y 可简写成 return、</span></div><div class="line"><span class="comment">//3、 `:=` 简洁赋值语句用在明确类型的地方，用于替代 `var`</span></div><div class="line"></div><div class="line"><span class="comment">//等同</span></div><div class="line"><span class="comment">//func split(sum int) (int, int) &#123;</span></div><div class="line"><span class="comment">//    x := sum * 4 / 9</span></div><div class="line"><span class="comment">//    y := sum - x</span></div><div class="line"><span class="comment">//    return x, y</span></div><div class="line"><span class="comment">//&#125;</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">split</span><span class="params">(sum <span class="keyword">int</span>)</span> <span class="params">(x, y <span class="keyword">int</span>)</span></span> &#123;</div><div class="line">    x = sum * <span class="number">4</span> / <span class="number">9</span></div><div class="line">    y = sum - x</div><div class="line">    <span class="keyword">return</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运行环境：&quot;&gt;&lt;a href=&quot;#运行环境：&quot; class=&quot;headerlink&quot; title=&quot;运行环境：&quot;&gt;&lt;/a&gt;运行环境：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;go version go1.8 windows/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;编辑器&quot;&gt;&lt;a href=&quot;#编辑器&quot; class=&quot;headerlink&quot; title=&quot;编辑器&quot;&gt;&lt;/a&gt;编辑器&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;JetBrains Gogland
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Go-官方test代码&quot;&gt;&lt;a href=&quot;#Go-官方test代码&quot; class=&quot;headerlink&quot; title=&quot;Go 官方test代码&quot;&gt;&lt;/a&gt;Go 官方test代码&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;$GOPATH$\test
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;int8&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;int16&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;int32&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;uint&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint16&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint32&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint64&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uintptr&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// uint8 的别名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;rune&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// int32 的别名, 代表一个Unicode码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float32&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float64&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;complex64&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;complex128&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Go环境搭建</title>
    <link href="http://lianghuiyong.online/2017/03/01/Go%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://lianghuiyong.online/2017/03/01/Go环境搭建/</id>
    <published>2017-03-01T13:51:01.000Z</published>
    <updated>2017-03-07T17:01:12.181Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、将go-sdk解压到-root-sdk文件夹"><a href="#1、将go-sdk解压到-root-sdk文件夹" class="headerlink" title="1、将go sdk解压到 /root/sdk文件夹"></a>1、将go sdk解压到 /root/sdk文件夹</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># tar -xzf go1.7.linux-amd64.tar.gz -C /root/sdk</span></div></pre></td></tr></table></figure>
<h2 id="2、-bashrc-添加path"><a href="#2、-bashrc-添加path" class="headerlink" title="2、.bashrc 添加path"></a>2、.bashrc 添加path</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> GOROOT=/root/sdk/go</div><div class="line"><span class="built_in">export</span> GOPATH=<span class="variable">$GOROOT</span>/lib</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin</div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=2001320&auto=0&height=66"></iframe>

<h2 id="3、使path生效"><a href="#3、使path生效" class="headerlink" title="3、使path生效"></a>3、使path生效</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># source .bashrc</span></div></pre></td></tr></table></figure>
<h2 id="4、go-env-查看信息"><a href="#4、go-env-查看信息" class="headerlink" title="4、go env 查看信息"></a>4、go env 查看信息</h2><p><img src="http://oeqej1j2m.bkt.clouddn.com/go_sdk_add_to_linux_path.JPG" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、将go-sdk解压到-root-sdk文件夹&quot;&gt;&lt;a href=&quot;#1、将go-sdk解压到-root-sdk文件夹&quot; class=&quot;headerlink&quot; title=&quot;1、将go sdk解压到 /root/sdk文件夹&quot;&gt;&lt;/a&gt;1、将go sdk解压到 /root/sdk文件夹&lt;/h2&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# tar -xzf go1.7.linux-amd64.tar.gz -C /root/sdk&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2、-bashrc-添加path&quot;&gt;&lt;a href=&quot;#2、-bashrc-添加path&quot; class=&quot;headerlink&quot; title=&quot;2、.bashrc 添加path&quot;&gt;&lt;/a&gt;2、.bashrc 添加path&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; GOROOT=/root/sdk/go&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; GOPATH=&lt;span class=&quot;variable&quot;&gt;$GOROOT&lt;/span&gt;/lib&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$GOROOT&lt;/span&gt;/bin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>自定义按钮ShapeButton</title>
    <link href="http://lianghuiyong.online/2017/02/28/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%89%E9%92%AEShapeButton/"/>
    <id>http://lianghuiyong.online/2017/02/28/自定义按钮ShapeButton/</id>
    <published>2017-02-28T11:34:35.000Z</published>
    <updated>2017-03-07T17:01:52.472Z</updated>
    
    <content type="html"><![CDATA[<p>开发时，为了一个简单的按钮要写一堆的样式代码，我表示我在写假代码。</p>
<h1 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h1><p><a href="https://github.com/lianghuiyong/CustomUI" title="Github 地址" target="_blank" rel="external">Github 地址</a></p>
<h2 id="可定制属性"><a href="#可定制属性" class="headerlink" title="可定制属性"></a>可定制属性</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">app:</span><span class="string">stroke :</span>细线宽度</div><div class="line"><span class="string">app:</span><span class="string">radius :</span>拐角宽度</div><div class="line"><span class="string">app:</span><span class="string">normalColor :</span>按钮颜色</div><div class="line"><span class="string">app:</span><span class="string">pressColor  :</span>按钮选中颜色</div><div class="line"><span class="string">app:</span><span class="string">stroke_normalColor :</span>细线颜色</div><div class="line"><span class="string">app:</span><span class="string">stroke_pressColor :</span>细线选中后的颜色</div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28406526&auto=0&height=66"></iframe>

<p><img src="http://o9or3yi8n.bkt.clouddn.com/CustomUI_shape_button.png" alt=""></p>
<h2 id="示例图代码"><a href="#示例图代码" class="headerlink" title="示例图代码"></a>示例图代码</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;com.better.customui.widget.ShapeButton</div><div class="line">    android:layout_width=<span class="string">"wrap_content"</span></div><div class="line">    android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">    android:text=<span class="string">"123456"</span></div><div class="line">    android:textColor=<span class="string">"#FF44FF"</span></div><div class="line">    <span class="keyword">app</span>:pressColor=<span class="string">"#2F000000"</span></div><div class="line">    <span class="keyword">app</span>:radius=<span class="string">"3dip"</span></div><div class="line">    <span class="keyword">app</span>:stroke=<span class="string">"0.5dip"</span></div><div class="line">    <span class="keyword">app</span>:stroke_normalColor=<span class="string">"#553355"</span></div><div class="line">    <span class="keyword">app</span>:stroke_pressColor=<span class="string">"#8F553355"</span> /&gt;</div></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;com<span class="selector-class">.better</span><span class="selector-class">.customui</span><span class="selector-class">.widget</span><span class="selector-class">.ShapeButton</span></div><div class="line">    android:layout_width=<span class="string">"wrap_content"</span></div><div class="line">    android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">    android:text=<span class="string">"123456"</span></div><div class="line">    android:textColor=<span class="string">"#FF44FF"</span></div><div class="line">    app:normalColor=<span class="string">"#FF3988D2"</span></div><div class="line">    app:pressColor=<span class="string">"#9F3988D2"</span></div><div class="line">    app:radius=<span class="string">"3dp"</span> /&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发时，为了一个简单的按钮要写一堆的样式代码，我表示我在写假代码。&lt;/p&gt;
&lt;h1 id=&quot;地址&quot;&gt;&lt;a href=&quot;#地址&quot; class=&quot;headerlink&quot; title=&quot;地址&quot;&gt;&lt;/a&gt;地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lianghuiyong/CustomUI&quot; title=&quot;Github 地址&quot;&gt;Github 地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;可定制属性&quot;&gt;&lt;a href=&quot;#可定制属性&quot; class=&quot;headerlink&quot; title=&quot;可定制属性&quot;&gt;&lt;/a&gt;可定制属性&lt;/h2&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;stroke :&lt;/span&gt;细线宽度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;radius :&lt;/span&gt;拐角宽度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;normalColor :&lt;/span&gt;按钮颜色&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;pressColor  :&lt;/span&gt;按钮选中颜色&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;stroke_normalColor :&lt;/span&gt;细线颜色&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;app:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;stroke_pressColor :&lt;/span&gt;细线选中后的颜色&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Android 自定义UI" scheme="http://lianghuiyong.online/tags/Android-%E8%87%AA%E5%AE%9A%E4%B9%89UI/"/>
    
  </entry>
  
  <entry>
    <title>通过系统通讯录获取联系人号码</title>
    <link href="http://lianghuiyong.online/2017/02/28/%E9%80%9A%E8%BF%87%E7%B3%BB%E7%BB%9F%E9%80%9A%E8%AE%AF%E5%BD%95%E8%8E%B7%E5%8F%96%E8%81%94%E7%B3%BB%E4%BA%BA%E5%8F%B7%E7%A0%81/"/>
    <id>http://lianghuiyong.online/2017/02/28/通过系统通讯录获取联系人号码/</id>
    <published>2017-02-28T11:26:27.000Z</published>
    <updated>2017-03-07T17:01:52.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、点击跳转到通讯录界面"><a href="#1、点击跳转到通讯录界面" class="headerlink" title="1、点击跳转到通讯录界面"></a>1、点击跳转到通讯录界面</h2><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Uri uri = Uri.parse(<span class="string">"content://contacts/people"</span>);</div><div class="line"><span class="keyword">Intent</span> <span class="keyword">intent</span> = new <span class="keyword">Intent</span>(<span class="keyword">Intent</span>.ACTION_PICK, uri);</div><div class="line">startActivityForResult(<span class="keyword">intent</span>, <span class="number">0</span>);</div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28406526&auto=0&height=66"></iframe>

<h2 id="2、获取通讯录姓名和手机号码"><a href="#2、获取通讯录姓名和手机号码" class="headerlink" title="2、获取通讯录姓名和手机号码"></a>2、获取通讯录姓名和手机号码</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line"><span class="keyword">protected</span> <span class="keyword">void</span> onActivityResult(<span class="built_in">int</span> requestCode, <span class="built_in">int</span> resultCode, Intent data) &#123;</div><div class="line">    <span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">            <span class="keyword">if</span> (data == <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">//处理返回的data,获取选择的联系人信息</span></div><div class="line">            Uri uri = data.getData();</div><div class="line">            <span class="keyword">String</span>[] contacts = getPhoneContacts(uri);</div><div class="line">            photoNo.setText(contacts[<span class="number">1</span>]);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">String</span>[] getPhoneContacts(Uri uri) &#123;</div><div class="line">    <span class="keyword">String</span>[] contact = <span class="keyword">new</span> <span class="keyword">String</span>[<span class="number">2</span>]; <span class="comment">//得到ContentResolver对象</span></div><div class="line">    ContentResolver cr = getContentResolver(); <span class="comment">//取得电话本中开始一项的光标</span></div><div class="line">    Cursor <span class="built_in">cursor</span> = cr.query(uri, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="built_in">cursor</span>.moveToFirst(); <span class="comment">//取得联系人姓名</span></div><div class="line">        <span class="built_in">int</span> nameFieldColumnIndex = <span class="built_in">cursor</span>.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME);</div><div class="line">        contact[<span class="number">0</span>] = <span class="built_in">cursor</span>.getString(nameFieldColumnIndex); <span class="comment">//取得电话号码</span></div><div class="line">        <span class="keyword">String</span> ContactId = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(ContactsContract.Contacts._ID));</div><div class="line">        Cursor phone = cr.query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, <span class="keyword">null</span>, ContactsContract.CommonDataKinds.Phone.CONTACT_ID + <span class="string">"="</span> + ContactId, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">        <span class="keyword">if</span> (phone != <span class="keyword">null</span>) &#123;</div><div class="line">            phone.moveToFirst();</div><div class="line">            contact[<span class="number">1</span>] = phone.getString(phone.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</div><div class="line">        &#125;</div><div class="line">        phone.close();</div><div class="line">        <span class="built_in">cursor</span>.close();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> contact;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3、权限"><a href="#3、权限" class="headerlink" title="3、权限"></a>3、权限</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.READ_CONTACTS"</span> /&gt;</div><div class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、点击跳转到通讯录界面&quot;&gt;&lt;a href=&quot;#1、点击跳转到通讯录界面&quot; class=&quot;headerlink&quot; title=&quot;1、点击跳转到通讯录界面&quot;&gt;&lt;/a&gt;1、点击跳转到通讯录界面&lt;/h2&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Uri uri = Uri.parse(&lt;span class=&quot;string&quot;&gt;&quot;content://contacts/people&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;intent&lt;/span&gt; = new &lt;span class=&quot;keyword&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;Intent&lt;/span&gt;.ACTION_PICK, uri);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startActivityForResult(&lt;span class=&quot;keyword&quot;&gt;intent&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>GitHub使用Hexo搭建博客与版本控制</title>
    <link href="http://lianghuiyong.online/2017/02/20/Github%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    <id>http://lianghuiyong.online/2017/02/20/Github使用hexo搭建博客与版本控制/</id>
    <published>2017-02-20T15:16:30.205Z</published>
    <updated>2017-03-07T17:00:30.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-本地准备工作"><a href="#一-本地准备工作" class="headerlink" title="一. 本地准备工作"></a>一. 本地准备工作</h2><p>1、安装Node.js、Git</p>
<h2 id="二-创建github仓库（以以下规则为准）"><a href="#二-创建github仓库（以以下规则为准）" class="headerlink" title="二. 创建github仓库（以以下规则为准）"></a>二. 创建github仓库（以以下规则为准）</h2><p>1、仓库名：github名.github.io（lianghuiyong.github.io）</p>
<p>2、创建时勾选<strong>Initialize this repository with a README</strong>，会自动创建master分支</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=2001320&auto=0&height=66"></iframe>

<p>3、创建仓库分支hexo<br>  1) 本地新建一个文件夹test<br>  2) test文件夹里鼠标右键选择Git bash，输入以下指令：<br>  <figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git remote add <span class="built_in">origin</span> https://github.com/github名/github名.github.io.git</div><div class="line">git pull <span class="built_in">origin</span> master</div><div class="line">git branch hexo</div><div class="line">git checkout hexo</div><div class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> hexo</div></pre></td></tr></table></figure></p>
<p><a href="https://lianghuiyong.gitbooks.io/git-note/content/chapter1.html" title="查看git常用命令" target="_blank" rel="external">git常用命令</a><br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">分支<span class="literal">master</span>（展示网页的分支必须是<span class="literal">master</span>），用于放hexo生成的静态网站文件。</div><div class="line">分支hexo（这个可以随意取），用于存储hexo文件。</div></pre></td></tr></table></figure></p>
<h2 id="三-第一次初始化hexo项目（不是从自己的github仓库下载过来的hexo工程文件）"><a href="#三-第一次初始化hexo项目（不是从自己的github仓库下载过来的hexo工程文件）" class="headerlink" title="三. 第一次初始化hexo项目（不是从自己的github仓库下载过来的hexo工程文件）"></a>三. 第一次初始化hexo项目（不是从自己的github仓库下载过来的hexo工程文件）</h2><p><strong>注：本地电脑要与github通过验证，git提交协议有ssh，HTTPS等验证方式，我用的HTTPS。</strong></p>
<p>在自己创建的博客目录里鼠标右键选择Git bash，输入以下指令：<br>1、获取hexo工程目录<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-<span class="keyword">cli</span></div></pre></td></tr></table></figure></p>
<p>2、初始化hexo，现在我感觉就是初始化hexo工程根目录下的_config.yml：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo init</span></div></pre></td></tr></table></figure></p>
<p>3、下载主题，默认的没用过，我用的yilia<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/litten/hexo-theme-yilia.git  themes/yilia</div></pre></td></tr></table></figure></p>
<p>4、配置主题，打开hexo根目录下的_config.yml：<br>theme: yilia （注意：后有个空格）</p>
<p>5、在上面打开的_config.yml文件，配置hexo生成的静态网页提交仓库地址（注意空格）<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">deploy</span>:</div><div class="line">  <span class="attribute">type</span>: git</div><div class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/github名/github名.github.io.git</span></div><div class="line">  <span class="attribute">branch</span>: master</div></pre></td></tr></table></figure></p>
<p>6、生成gitahub静态博客<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo clean</span></div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>7、在浏览器上打开 <a href="http://github名.github.io.git" target="_blank" rel="external">http://github名.github.io.git</a> ，看看有没有效果</p>
<h2 id="四-项目目录搭建好后，将hexo工程目录提交到github的hexo分支"><a href="#四-项目目录搭建好后，将hexo工程目录提交到github的hexo分支" class="headerlink" title="四. 项目目录搭建好后，将hexo工程目录提交到github的hexo分支"></a>四. 项目目录搭建好后，将hexo工程目录提交到github的hexo分支</h2><p>1、将hexo工程下的<strong>.deploy_git</strong>删除</p>
<p>2、进themes/yilia把<strong> .git</strong>隐藏目录删除</p>
<p>3、进到hexo工程根目录，初始化git<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git init</span></div></pre></td></tr></table></figure></p>
<p>4、添加github仓库地址<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//github.<span class="keyword">com</span>/github名/github名.github.io.git</div></pre></td></tr></table></figure></p>
<p>5、获取github的hexo分支<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git pull origin hexo</span></div></pre></td></tr></table></figure></p>
<p>6、本地切换到hexo分支<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git checkout hexo</span></div></pre></td></tr></table></figure></p>
<p>7、添加hexo工程目录到git新节点<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">add</span><span class="bash"> .</span></div><div class="line">git commit -m <span class="string">"updata hexo"</span></div></pre></td></tr></table></figure></p>
<p>8、提交新节点到github仓库<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> hexo</div></pre></td></tr></table></figure></p>
<h2 id="五-初始化项目目录后或者从github的hexo分支获取到hexo工程目录"><a href="#五-初始化项目目录后或者从github的hexo分支获取到hexo工程目录" class="headerlink" title="五. 初始化项目目录后或者从github的hexo分支获取到hexo工程目录"></a>五. 初始化项目目录后或者从github的hexo分支获取到hexo工程目录</h2><p>附：从hithub获取hexo目录</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>）、创建一个博客文件夹，进去并初始化</div><div class="line">	git init</div><div class="line">	git remote <span class="keyword">add</span><span class="bash"> origin https://github.com/github名/github名.github.io.git</span></div><div class="line"><span class="number">2</span>）、获取hexo分支目录</div><div class="line">	git pull origin hexo</div></pre></td></tr></table></figure>
<p>1、写静态博客<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> “***”</div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><p><strong>使用Android Studio等编译器来版本控制博客项目文件</strong></p>
<p><img src="http://oeqej1j2m.bkt.clouddn.com/hexo_1111.png" alt="Git忽略文件" title="Git忽略文件"></p>
<p><img src="http://oeqej1j2m.bkt.clouddn.com/hexo_2222.png" alt="示例" title="示例"></p>
<p>git config core.longpaths true</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-本地准备工作&quot;&gt;&lt;a href=&quot;#一-本地准备工作&quot; class=&quot;headerlink&quot; title=&quot;一. 本地准备工作&quot;&gt;&lt;/a&gt;一. 本地准备工作&lt;/h2&gt;&lt;p&gt;1、安装Node.js、Git&lt;/p&gt;
&lt;h2 id=&quot;二-创建github仓库（以以下规则为准）&quot;&gt;&lt;a href=&quot;#二-创建github仓库（以以下规则为准）&quot; class=&quot;headerlink&quot; title=&quot;二. 创建github仓库（以以下规则为准）&quot;&gt;&lt;/a&gt;二. 创建github仓库（以以下规则为准）&lt;/h2&gt;&lt;p&gt;1、仓库名：github名.github.io（lianghuiyong.github.io）&lt;/p&gt;
&lt;p&gt;2、创建时勾选&lt;strong&gt;Initialize this repository with a README&lt;/strong&gt;，会自动创建master分支&lt;/p&gt;
    
    </summary>
    
    
      <category term="GitHub Pages" scheme="http://lianghuiyong.online/tags/GitHub-Pages/"/>
    
      <category term="Hexo" scheme="http://lianghuiyong.online/tags/Hexo/"/>
    
      <category term="版本管理" scheme="http://lianghuiyong.online/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>打包出现： Cannot merge new index 65725 into a non-jumbo instruction!</title>
    <link href="http://lianghuiyong.online/2017/02/20/%E6%89%93%E5%8C%85%E5%87%BA%E7%8E%B0%EF%BC%9A-Cannot-merge-new-index-65725-into-a-non-jumbo-instruction/"/>
    <id>http://lianghuiyong.online/2017/02/20/打包出现：-Cannot-merge-new-index-65725-into-a-non-jumbo-instruction/</id>
    <published>2017-02-20T02:46:37.000Z</published>
    <updated>2017-03-07T17:01:52.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、build-gradle里添加"><a href="#1、build-gradle里添加" class="headerlink" title="1、build.gradle里添加"></a>1、build.gradle里添加</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">android</span> &#123;</div><div class="line">  <span class="section">dexOptions</span> &#123;</div><div class="line">      <span class="attribute">jumboMode</span> <span class="literal">true</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=155910&auto=0&height=66"></iframe>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、build-gradle里添加&quot;&gt;&lt;a href=&quot;#1、build-gradle里添加&quot; class=&quot;headerlink&quot; title=&quot;1、build.gradle里添加&quot;&gt;&lt;/a&gt;1、build.gradle里添加&lt;/h1&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;android&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;section&quot;&gt;dexOptions&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;jumboMode&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android JCenter仓库搭建</title>
    <link href="http://lianghuiyong.online/2016/12/21/Android-JCenter%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA/"/>
    <id>http://lianghuiyong.online/2016/12/21/Android-JCenter仓库搭建/</id>
    <published>2016-12-21T08:22:23.000Z</published>
    <updated>2017-03-07T17:00:05.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JCenter准备"><a href="#JCenter准备" class="headerlink" title="JCenter准备"></a>JCenter准备</h2><ol>
<li>用GitHub账号登陆<a href="https://bintray.com" title="bintray" target="_blank" rel="external">bintray</a>。</li>
<li>新建仓库，Add New Repository</li>
</ol>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=455502271&auto=0&height=66"></iframe>

<h2 id="库工程"><a href="#库工程" class="headerlink" title="库工程"></a>库工程</h2><ol>
<li>创建AS项目</li>
<li>工程内创建Module(Android Librarys)<h3 id="以下修改都是在Module内修改的"><a href="#以下修改都是在Module内修改的" class="headerlink" title="以下修改都是在Module内修改的"></a>以下修改都是在Module内修改的</h3></li>
<li><p>build.gradle</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">buildscript</span> &#123;</div><div class="line">    <span class="keyword">repositories</span> &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">dependencies</span> &#123;</div><div class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.2.3'</span></div><div class="line">        <span class="keyword">classpath</span> <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'</span></div><div class="line">        <span class="keyword">classpath</span> <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.5'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">25</span></div><div class="line">    buildToolsVersion <span class="string">"25.0.0"</span></div><div class="line"></div><div class="line">    defaultConfig &#123;</div><div class="line">        minSdkVersion <span class="number">15</span></div><div class="line">        targetSdkVersion <span class="number">25</span></div><div class="line">        versionCode <span class="number">1</span></div><div class="line">        versionName <span class="string">"0.0.3"</span></div><div class="line"></div><div class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            minifyEnabled <span class="keyword">false</span></div><div class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:25.0.1'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">apply <span class="keyword">from</span>: <span class="string">"bintrayUpload.gradle"</span></div></pre></td></tr></table></figure>
</li>
<li><p>Module根文件夹下新建bintrayUpload.gradle，拷贝以下内容</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.github.dcendents.android-maven'</span></div><div class="line">apply plugin: <span class="string">'com.jfrog.bintray'</span></div><div class="line"></div><div class="line"><span class="comment">//加载属性文件</span></div><div class="line">Properties properties = <span class="keyword">new</span> Properties()</div><div class="line"><span class="keyword">File</span> localPropertiesFile = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">"bintray.properties"</span>);</div><div class="line"><span class="keyword">if</span> (localPropertiesFile.exists()) &#123;</div><div class="line">    properties.load(localPropertiesFile.newDataInputStream())</div><div class="line">&#125;</div><div class="line"><span class="keyword">File</span> projectPropertiesFile = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">"project.properties"</span>);</div><div class="line"><span class="keyword">if</span> (projectPropertiesFile.exists()) &#123;</div><div class="line">    properties.load(projectPropertiesFile.newDataInputStream())</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//读取属性</span></div><div class="line"><span class="keyword">def</span> projectRepositoryName = properties.getProperty(<span class="string">"project.repositoryName"</span>)</div><div class="line"><span class="keyword">def</span> projectName = properties.getProperty(<span class="string">"project.name"</span>)</div><div class="line"><span class="keyword">def</span> projectGroupId = properties.getProperty(<span class="string">"project.groupId"</span>)</div><div class="line"><span class="keyword">def</span> projectArtifactId = properties.getProperty(<span class="string">"project.artifactId"</span>)</div><div class="line"><span class="keyword">def</span> projectVersionName = android.defaultConfig.versionName</div><div class="line"><span class="keyword">def</span> projectPackaging = properties.getProperty(<span class="string">"project.packaging"</span>)</div><div class="line"><span class="keyword">def</span> projectSiteUrl = properties.getProperty(<span class="string">"project.siteUrl"</span>)</div><div class="line"><span class="keyword">def</span> projectGitUrl = properties.getProperty(<span class="string">"project.gitUrl"</span>)</div><div class="line"></div><div class="line"><span class="keyword">def</span> developerId = properties.getProperty(<span class="string">"developer.id"</span>)</div><div class="line"><span class="keyword">def</span> developerName = properties.getProperty(<span class="string">"developer.name"</span>)</div><div class="line"><span class="keyword">def</span> developerEmail = properties.getProperty(<span class="string">"developer.email"</span>)</div><div class="line"></div><div class="line"><span class="keyword">def</span> bintrayUser = properties.getProperty(<span class="string">"bintray.user"</span>)</div><div class="line"><span class="keyword">def</span> bintrayApikey = properties.getProperty(<span class="string">"bintray.apiKey"</span>)</div><div class="line"><span class="keyword">def</span> bintrayOrganizationId = properties.getProperty(<span class="string">"bintray.organizationId"</span>);</div><div class="line"></div><div class="line"><span class="keyword">def</span> javadocName = properties.getProperty(<span class="string">"javadoc.name"</span>)</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">*这句代码一定要加否则会出现如下错误</div><div class="line">* Could not upload to 'https://api.bintray.com/content/coolcode/maven/LibUiBase/1.0.0/CommonLibrary/LibUiBase/1.0.0/LibUiBase-1.0.0.pom': HTTP/1.1 400 Bad Request [</div><div class="line">message:Unable to upload files: Maven group, artifact or version defined in the pom file do not match the file path 'CommonLibrary/LibUiBase/1.0.0/LibUiBase-1.0.0.p</div><div class="line">om']</div><div class="line">* */</div><div class="line"><span class="keyword">group</span> = projectGroupId</div><div class="line"></div><div class="line"><span class="comment">// 配置生成POM.xml文件的参数</span></div><div class="line">install &#123;</div><div class="line">    <span class="keyword">repositories</span>.mavenInstaller &#123;</div><div class="line">        pom &#123;</div><div class="line">            <span class="keyword">project</span> &#123;</div><div class="line">                name projectName</div><div class="line">                groupId projectGroupId</div><div class="line">                artifactId projectArtifactId</div><div class="line">                version projectVersionName</div><div class="line">                packaging projectPackaging</div><div class="line">                url projectSiteUrl</div><div class="line">                licenses &#123;</div><div class="line">                    license &#123;</div><div class="line">                        name <span class="string">'The Apache Software License, Version 2.0'</span></div><div class="line">                        url <span class="string">'http://www.apache.org/licenses/LICENSE-2.0.txt'</span></div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                developers &#123;</div><div class="line">                    developer &#123;</div><div class="line">                        id developerId</div><div class="line">                        name developerName</div><div class="line">                        email developerEmail</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                scm &#123;</div><div class="line">                    connection projectGitUrl</div><div class="line">                    developerConnection projectGitUrl</div><div class="line">                    url projectSiteUrl</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">tasks.withType(Javadoc) &#123;</div><div class="line">    <span class="keyword">options</span>.addStringOption(<span class="string">'Xdoclint:none'</span>, <span class="string">'-quiet'</span>)</div><div class="line">    <span class="keyword">options</span>.addStringOption(<span class="string">'encoding'</span>, <span class="string">'UTF-8'</span>)</div><div class="line">    <span class="keyword">options</span>.addStringOption(<span class="string">'charSet'</span>, <span class="string">'UTF-8'</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//生成sources.jar</span></div><div class="line"><span class="keyword">task</span> sourcesJar(type: Jar) &#123;</div><div class="line">    <span class="keyword">from</span> android.<span class="keyword">sourceSets</span>.main.java.srcDirs</div><div class="line">    classifier = <span class="string">'sources'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">task</span> javadoc(type: Javadoc) &#123;</div><div class="line">    <span class="keyword">source</span> = android.<span class="keyword">sourceSets</span>.main.java.srcDirs</div><div class="line">    <span class="keyword">classpath</span> += <span class="keyword">project</span>.files(android.getBootClasspath().<span class="keyword">join</span>(<span class="keyword">File</span>.pathSeparator))</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//生成javadoc.jar</span></div><div class="line"><span class="keyword">task</span> javadocJar(type: Jar, dependsOn: javadoc) &#123;</div><div class="line">    classifier = <span class="string">'javadoc'</span></div><div class="line">    <span class="keyword">from</span> javadoc.<span class="keyword">destinationDir</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">artifacts</span> &#123;</div><div class="line">    archives javadocJar</div><div class="line">    archives sourcesJar</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//javadoc的配置</span></div><div class="line">javadoc &#123;</div><div class="line">    <span class="keyword">options</span> &#123;</div><div class="line">        encoding <span class="string">"UTF-8"</span></div><div class="line">        charSet <span class="string">'UTF-8'</span></div><div class="line">        author <span class="keyword">true</span></div><div class="line">        version projectVersionName</div><div class="line">        links <span class="string">"http://docs.oracle.com/javase/7/docs/api"</span></div><div class="line">        title javadocName</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">*userOrg为bintray账号信息里面的Organization Id</div><div class="line">*repo为你创建的仓库名称</div><div class="line">* 如果上述两个字段写错了，则会出现下面类似的错误</div><div class="line">*Could not create package 'huangxuanheng/maven/fragmentstack': HTTP/1.1 404 Not Found [message:Repo 'maven' was not found]</div><div class="line">*</div><div class="line">*</div><div class="line">* */</div><div class="line">bintray &#123;</div><div class="line">    user = bintrayUser</div><div class="line">    key = bintrayApikey</div><div class="line">    <span class="keyword">configurations</span> = [<span class="string">'archives'</span>]</div><div class="line">    pkg &#123;</div><div class="line">        userOrg = bintrayOrganizationId</div><div class="line">        repo = projectRepositoryName</div><div class="line">        name = projectName</div><div class="line">        websiteUrl = projectSiteUrl</div><div class="line">        vcsUrl = projectGitUrl</div><div class="line">        licenses = [<span class="string">"Apache-2.0"</span>]</div><div class="line">        publish = <span class="keyword">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在Module根目录下，新建project.properties文件，添加以下内容，并自行修改对应参数</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#project</span></div><div class="line"><span class="meta">#仓库名称，就是在bintray官网建立的仓库的名称</span></div><div class="line">project.repositoryName=仓库名称</div><div class="line"><span class="meta">#bintray仓库里显示的项目名称</span></div><div class="line">project.name=name</div><div class="line"><span class="meta">#项目组id，这个取的时候别跟别人的相冲突就行</span></div><div class="line">project.groupId=com.***.***</div><div class="line"><span class="meta">#项目id,一般同project.name</span></div><div class="line">project.artifactId=name</div><div class="line"><span class="meta">#打包类型</span></div><div class="line">project.packaging=aar</div><div class="line"><span class="meta">#项目官方网站地址</span></div><div class="line">project.siteUrl=https:<span class="comment">//github.com/lianghuiyong/CustomUI</span></div><div class="line"><span class="meta">#项目git地址</span></div><div class="line">project.gitUrl=https:<span class="comment">//github.com/lianghuiyong/CustomUI</span></div><div class="line"><span class="meta">#生成的javadoc名称</span></div><div class="line">javadoc.name=CustomUI.Doc</div></pre></td></tr></table></figure>
</li>
<li><p>在Module根目录下，新建bintray.properties文件，添加对应参数</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#配置bintray账号相关信息</span></div><div class="line"><span class="meta">#bintray用户名,不是登陆邮箱,是个人中心右上角显示的名字</span></div><div class="line">bintray.user=user</div><div class="line"><span class="meta">#bintray的ApiKey</span></div><div class="line">bintray.apiKey=apiKey</div><div class="line"><span class="meta">#bintray的Organization Id</span></div><div class="line">bintray.organizationId=organizationId</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#配置开发者信息</span></div><div class="line"><span class="meta">#昵称</span></div><div class="line">developer.id=lianghuiyong</div><div class="line"><span class="meta">#姓名</span></div><div class="line">developer.name=lianghuiyong</div><div class="line"><span class="meta">#邮箱</span></div><div class="line">developer.email=lianghuiyong@outlook.com</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><ol>
<li>gradlew install</li>
<li>gradlew bintrayUpload</li>
</ol>
<h2 id="将库添加到公共库"><a href="#将库添加到公共库" class="headerlink" title="将库添加到公共库"></a>将库添加到公共库</h2><p>进bintray，打开仓库对应的项目</p>
<ol>
<li>add to JCenter</li>
<li>send</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JCenter准备&quot;&gt;&lt;a href=&quot;#JCenter准备&quot; class=&quot;headerlink&quot; title=&quot;JCenter准备&quot;&gt;&lt;/a&gt;JCenter准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;用GitHub账号登陆&lt;a href=&quot;https://bintray.com&quot; title=&quot;bintray&quot;&gt;bintray&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;新建仓库，Add New Repository&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
      <category term="JCenter" scheme="http://lianghuiyong.online/tags/JCenter/"/>
    
  </entry>
  
  <entry>
    <title>5.0侧栏顶部透明，仿网易云音乐效果。</title>
    <link href="http://lianghuiyong.online/2016/12/16/5-0%E4%BE%A7%E6%A0%8F%E9%A1%B6%E9%83%A8%E9%80%8F%E6%98%8E%EF%BC%8C%E4%BB%BF%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%95%88%E6%9E%9C%E3%80%82/"/>
    <id>http://lianghuiyong.online/2016/12/16/5-0侧栏顶部透明，仿网易云音乐效果。/</id>
    <published>2016-12-16T02:19:52.000Z</published>
    <updated>2017-02-28T12:03:41.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-主题"><a href="#一-主题" class="headerlink" title="一. 主题"></a>一. 主题</h2><p>1、基本主题<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"Base.AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span><span class="xml"></span></div><div class="line">    <span class="comment">&lt;!--text style--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:textColor"</span>&gt;</span>@color/textColor<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowAnimationStyle"</span>&gt;</span>@style/AnimationActivity<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2、5.0以上系统适配主题和5.0以下的主题<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--标题栏透明--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"Base.TransParent"</span> <span class="attr">parent</span>=<span class="string">"Base.AppTheme"</span>&gt;</span><span class="xml"></span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowDrawsSystemBarBackgrounds"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:statusBarColor"</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--标题栏透明--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"Base.TransParent"</span> <span class="attr">parent</span>=<span class="string">"Base.AppTheme"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>3、页面</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"TransParentTheme"</span> <span class="attr">parent</span>=<span class="string">"Base.TransParent"</span>&gt;</span><span class="xml"></span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/mainColorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/mainColorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="二-页面使用"><a href="#二-页面使用" class="headerlink" title="二. 页面使用"></a>二. 页面使用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="comment">&lt;!--其他布局--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">......</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--侧栏引用布局--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">include</span></span></div><div class="line">        <span class="attr">layout</span>=<span class="string">"@layout/nav_header_main"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-主题&quot;&gt;&lt;a href=&quot;#一-主题&quot; class=&quot;headerlink&quot; title=&quot;一. 主题&quot;&gt;&lt;/a&gt;一. 主题&lt;/h2&gt;&lt;p&gt;1、基本主题&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Base.AppTheme&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;parent&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Theme.AppCompat.Light.NoActionBar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--text style--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:textColor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@color/textColor&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;colorAccent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@color/colorAccent&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:windowAnimationStyle&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@style/AnimationActivity&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://lianghuiyong.online/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 网络设置</title>
    <link href="http://lianghuiyong.online/2016/11/05/CentOS7%20%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/"/>
    <id>http://lianghuiyong.online/2016/11/05/CentOS7 网络设置/</id>
    <published>2016-11-05T09:39:12.000Z</published>
    <updated>2017-03-07T17:00:15.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、使用虚拟机安装CentOS，并使用桥接方式链接网络"><a href="#1、使用虚拟机安装CentOS，并使用桥接方式链接网络" class="headerlink" title="1、使用虚拟机安装CentOS，并使用桥接方式链接网络"></a>1、使用虚拟机安装CentOS，并使用桥接方式链接网络</h1><h1 id="2、编辑网络配置"><a href="#2、编辑网络配置" class="headerlink" title="2、编辑网络配置"></a>2、编辑网络配置</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/</span></div><div class="line">vi ifcfg-eno16777736</div></pre></td></tr></table></figure>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28406526&auto=0&height=66"></iframe>

<p><strong>更改</strong><br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">BOOTPROTO</span>=DHCP -&gt; BOOTPROTO=static</div><div class="line"><span class="attr">ONBOOT</span>=<span class="literal">no</span> -&gt; <span class="literal">ON</span>BOOT=<span class="literal">yes</span></div></pre></td></tr></table></figure></p>
<p><strong>增加</strong></p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">HWADDR</span>=aa:bb:cc:dd:ee;ff //虚拟机的mac地址,在虚拟机的设置-网络中可以查看</div><div class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">0.1</span> //网关，需要和主机一致</div><div class="line"><span class="attr">IPADDR</span>=<span class="number">192.168</span>.<span class="number">0.222</span> //虚拟机的ip,保持和主机一个网段</div><div class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">255.0</span> //子网掩码</div><div class="line"><span class="attr">DNS1</span>=<span class="number">8.8</span>.<span class="number">8.8</span> //DNS</div><div class="line"><span class="attr">DNS2</span>=<span class="number">114.114</span>.<span class="number">114.114</span> //DNS</div></pre></td></tr></table></figure>
<p>1、重启网络服务：service network restart<br>2、试下：ping www.baidu.com</p>
<h1 id="3、安装网络工具"><a href="#3、安装网络工具" class="headerlink" title="3、安装网络工具"></a>3、安装网络工具</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> net-tools</div></pre></td></tr></table></figure>
<h1 id="4、安装SSH"><a href="#4、安装SSH" class="headerlink" title="4、安装SSH"></a>4、安装SSH</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> openssh-<span class="keyword">server</span> -y</div></pre></td></tr></table></figure>
<h1 id="5、结语"><a href="#5、结语" class="headerlink" title="5、结语"></a>5、结语</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">本以为后面会以后端开发继续往前写的，后面发现其实自己工作重心和目前对自己开发有利的方向还是前端，</div><div class="line">恰巧这几天微信小程序可以开发，转而学习微信小程序了。后端是另一个开始，话说我也是Go的追逐者。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、使用虚拟机安装CentOS，并使用桥接方式链接网络&quot;&gt;&lt;a href=&quot;#1、使用虚拟机安装CentOS，并使用桥接方式链接网络&quot; class=&quot;headerlink&quot; title=&quot;1、使用虚拟机安装CentOS，并使用桥接方式链接网络&quot;&gt;&lt;/a&gt;1、使用虚拟机安装CentOS，并使用桥接方式链接网络&lt;/h1&gt;&lt;h1 id=&quot;2、编辑网络配置&quot;&gt;&lt;a href=&quot;#2、编辑网络配置&quot; class=&quot;headerlink&quot; title=&quot;2、编辑网络配置&quot;&gt;&lt;/a&gt;2、编辑网络配置&lt;/h1&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd &lt;span class=&quot;regexp&quot;&gt;/etc/&lt;/span&gt;sysconfig&lt;span class=&quot;regexp&quot;&gt;/network-scripts/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vi ifcfg-eno16777736&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://lianghuiyong.online/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Git使用笔录</title>
    <link href="http://lianghuiyong.online/2016/10/29/Git%E4%BD%BF%E7%94%A8%E7%AC%94%E5%BD%95/"/>
    <id>http://lianghuiyong.online/2016/10/29/Git使用笔录/</id>
    <published>2016-10-29T05:09:43.000Z</published>
    <updated>2017-03-01T14:02:46.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git工具下载：https-git-scm-com-download"><a href="#git工具下载：https-git-scm-com-download" class="headerlink" title="git工具下载：https://git-scm.com/download/"></a>git工具下载：<a href="https://git-scm.com/download/" target="_blank" rel="external">https://git-scm.com/download/</a></h2><p><strong>配置git信息</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"Your name"</span></div><div class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"Your email"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="1、git本地仓库初始化"><a href="#1、git本地仓库初始化" class="headerlink" title="1、git本地仓库初始化"></a>1、git本地仓库初始化</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git remote <span class="keyword">remove</span>/<span class="keyword">add</span> origin git仓库地址</div><div class="line">git pull origin master master <span class="comment">//取远程主分支</span></div><div class="line">git pull origin Liang Liang <span class="comment">//取远程Liang的分支</span></div></pre></td></tr></table></figure>
<h1 id="2、提交远程到仓库"><a href="#2、提交远程到仓库" class="headerlink" title="2、提交远程到仓库"></a>2、提交远程到仓库</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">add</span><span class="bash"> .</span></div><div class="line">git commot -m <span class="string">"提交信息"</span></div><div class="line">git push origin MoLiang //提交到远程分支MoLiang</div></pre></td></tr></table></figure>
<h1 id="3、分支管理"><a href="#3、分支管理" class="headerlink" title="3、分支管理"></a>3、分支管理</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch Liang <span class="comment">//创建Liang的分支</span></div><div class="line">git branch origin/Liang <span class="comment">//创建Liang的远程分支</span></div></pre></td></tr></table></figure>
<h1 id="4、合并主分区"><a href="#4、合并主分区" class="headerlink" title="4、合并主分区"></a>4、合并主分区</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git checkout <span class="keyword">master</span> <span class="title">(主分支)</span></div><div class="line">git merge origin/MoLiang</div><div class="line">git push origin <span class="literal">master</span>:<span class="keyword">master</span> <span class="title">//$</span> git push <span class="tag">&lt;远程主机名&gt;</span> <span class="tag">&lt;本地分支名&gt;</span>:<span class="tag">&lt;远程分支名&gt;</span></div></pre></td></tr></table></figure>
<h1 id="5、回滚"><a href="#5、回滚" class="headerlink" title="5、回滚"></a>5、回滚</h1><h2 id="主分支"><a href="#主分支" class="headerlink" title="主分支"></a>主分支</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> git <span class="built-in">log</span> 查看commit的sha1值+</div><div class="line"><span class="symbol">$</span> git reset <span class="number">3</span>a48e096339f5c840a8d15435ff88cbd11ccd31f</div><div class="line"><span class="symbol">$</span> git stash</div><div class="line"><span class="symbol">$</span> git push -f origin master</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git工具下载：https-git-scm-com-download&quot;&gt;&lt;a href=&quot;#git工具下载：https-git-scm-com-download&quot; class=&quot;headerlink&quot; title=&quot;git工具下载：https://git-scm.com/download/&quot;&gt;&lt;/a&gt;git工具下载：&lt;a href=&quot;https://git-scm.com/download/&quot;&gt;https://git-scm.com/download/&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;配置git信息&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git config --global user&lt;span class=&quot;selector-class&quot;&gt;.name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Your name&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global user&lt;span class=&quot;selector-class&quot;&gt;.email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Your email&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="版本管理" scheme="http://lianghuiyong.online/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
      <category term="Git" scheme="http://lianghuiyong.online/tags/Git/"/>
    
  </entry>
  
</feed>
